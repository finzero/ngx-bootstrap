"use strict";(self.webpackChunkngx_bootstrap_docs=self.webpackChunkngx_bootstrap_docs||[]).push([[546],{43546:(p,i,r)=>{r.r(i),r.d(i,{DemoTypeaheadModule:()=>un,TypeaheadSectionComponent:()=>fe});var l=r(60177),h=r(84341),Te=r(8681);const Se={\u00c1:"A",\u0102:"A",\u1eae:"A",\u1eb6:"A",\u1eb0:"A",\u1eb2:"A",\u1eb4:"A",\u01cd:"A",\u00c2:"A",\u1ea4:"A",\u1eac:"A",\u1ea6:"A",\u1ea8:"A",\u1eaa:"A",\u00c4:"A",\u01de:"A",\u0226:"A",\u01e0:"A",\u1ea0:"A",\u0200:"A",\u00c0:"A",\u1ea2:"A",\u0202:"A",\u0100:"A",\u0104:"A",\u00c5:"A",\u01fa:"A",\u1e00:"A",\u023a:"A",\u00c3:"A",\ua732:"AA",\u00c6:"AE",\u01fc:"AE",\u01e2:"AE",\ua734:"AO",\ua736:"AU",\ua738:"AV",\ua73a:"AV",\ua73c:"AY",\u1e02:"B",\u1e04:"B",\u0181:"B",\u1e06:"B",\u0243:"B",\u0182:"B",\u0106:"C",\u010c:"C",\u00c7:"C",\u1e08:"C",\u0108:"C",\u010a:"C",\u0187:"C",\u023b:"C",\u010e:"D",\u1e10:"D",\u1e12:"D",\u1e0a:"D",\u1e0c:"D",\u018a:"D",\u1e0e:"D",\u01f2:"D",\u01c5:"D",\u0110:"D",\u018b:"D",\u01f1:"DZ",\u01c4:"DZ",\u00c9:"E",\u0114:"E",\u011a:"E",\u0228:"E",\u1e1c:"E",\u00ca:"E",\u1ebe:"E",\u1ec6:"E",\u1ec0:"E",\u1ec2:"E",\u1ec4:"E",\u1e18:"E",\u00cb:"E",\u0116:"E",\u1eb8:"E",\u0204:"E",\u00c8:"E",\u1eba:"E",\u0206:"E",\u0112:"E",\u1e16:"E",\u1e14:"E",\u0118:"E",\u0246:"E",\u1ebc:"E",\u1e1a:"E",\ua76a:"ET",\u1e1e:"F",\u0191:"F",\u01f4:"G",\u011e:"G",\u01e6:"G",\u0122:"G",\u011c:"G",\u0120:"G",\u0193:"G",\u1e20:"G",\u01e4:"G",\u1e2a:"H",\u021e:"H",\u1e28:"H",\u0124:"H",\u2c67:"H",\u1e26:"H",\u1e22:"H",\u1e24:"H",\u0126:"H",\u00cd:"I",\u012c:"I",\u01cf:"I",\u00ce:"I",\u00cf:"I",\u1e2e:"I",\u0130:"I",\u1eca:"I",\u0208:"I",\u00cc:"I",\u1ec8:"I",\u020a:"I",\u012a:"I",\u012e:"I",\u0197:"I",\u0128:"I",\u1e2c:"I",\ua779:"D",\ua77b:"F",\ua77d:"G",\ua782:"R",\ua784:"S",\ua786:"T",\ua76c:"IS",\u0134:"J",\u0248:"J",\u1e30:"K",\u01e8:"K",\u0136:"K",\u2c69:"K",\ua742:"K",\u1e32:"K",\u0198:"K",\u1e34:"K",\ua740:"K",\ua744:"K",\u0139:"L",\u023d:"L",\u013d:"L",\u013b:"L",\u1e3c:"L",\u1e36:"L",\u1e38:"L",\u2c60:"L",\ua748:"L",\u1e3a:"L",\u013f:"L",\u2c62:"L",\u01c8:"L",\u0141:"L",\u01c7:"LJ",\u1e3e:"M",\u1e40:"M",\u1e42:"M",\u2c6e:"M",\u0143:"N",\u0147:"N",\u0145:"N",\u1e4a:"N",\u1e44:"N",\u1e46:"N",\u01f8:"N",\u019d:"N",\u1e48:"N",\u0220:"N",\u01cb:"N",\u00d1:"N",\u01ca:"NJ",\u00d3:"O",\u014e:"O",\u01d1:"O",\u00d4:"O",\u1ed0:"O",\u1ed8:"O",\u1ed2:"O",\u1ed4:"O",\u1ed6:"O",\u00d6:"O",\u022a:"O",\u022e:"O",\u0230:"O",\u1ecc:"O",\u0150:"O",\u020c:"O",\u00d2:"O",\u1ece:"O",\u01a0:"O",\u1eda:"O",\u1ee2:"O",\u1edc:"O",\u1ede:"O",\u1ee0:"O",\u020e:"O",\ua74a:"O",\ua74c:"O",\u014c:"O",\u1e52:"O",\u1e50:"O",\u019f:"O",\u01ea:"O",\u01ec:"O",\u00d8:"O",\u01fe:"O",\u00d5:"O",\u1e4c:"O",\u1e4e:"O",\u022c:"O",\u01a2:"OI",\ua74e:"OO",\u0190:"E",\u0186:"O",\u0222:"OU",\u1e54:"P",\u1e56:"P",\ua752:"P",\u01a4:"P",\ua754:"P",\u2c63:"P",\ua750:"P",\ua758:"Q",\ua756:"Q",\u0154:"R",\u0158:"R",\u0156:"R",\u1e58:"R",\u1e5a:"R",\u1e5c:"R",\u0210:"R",\u0212:"R",\u1e5e:"R",\u024c:"R",\u2c64:"R",\ua73e:"C",\u018e:"E",\u015a:"S",\u1e64:"S",\u0160:"S",\u1e66:"S",\u015e:"S",\u015c:"S",\u0218:"S",\u1e60:"S",\u1e62:"S",\u1e68:"S",\u0164:"T",\u0162:"T",\u1e70:"T",\u021a:"T",\u023e:"T",\u1e6a:"T",\u1e6c:"T",\u01ac:"T",\u1e6e:"T",\u01ae:"T",\u0166:"T",\u2c6f:"A",\ua780:"L",\u019c:"M",\u0245:"V",\ua728:"TZ",\u00da:"U",\u016c:"U",\u01d3:"U",\u00db:"U",\u1e76:"U",\u00dc:"U",\u01d7:"U",\u01d9:"U",\u01db:"U",\u01d5:"U",\u1e72:"U",\u1ee4:"U",\u0170:"U",\u0214:"U",\u00d9:"U",\u1ee6:"U",\u01af:"U",\u1ee8:"U",\u1ef0:"U",\u1eea:"U",\u1eec:"U",\u1eee:"U",\u0216:"U",\u016a:"U",\u1e7a:"U",\u0172:"U",\u016e:"U",\u0168:"U",\u1e78:"U",\u1e74:"U",\ua75e:"V",\u1e7e:"V",\u01b2:"V",\u1e7c:"V",\ua760:"VY",\u1e82:"W",\u0174:"W",\u1e84:"W",\u1e86:"W",\u1e88:"W",\u1e80:"W",\u2c72:"W",\u1e8c:"X",\u1e8a:"X",\u00dd:"Y",\u0176:"Y",\u0178:"Y",\u1e8e:"Y",\u1ef4:"Y",\u1ef2:"Y",\u01b3:"Y",\u1ef6:"Y",\u1efe:"Y",\u0232:"Y",\u024e:"Y",\u1ef8:"Y",\u0179:"Z",\u017d:"Z",\u1e90:"Z",\u2c6b:"Z",\u017b:"Z",\u1e92:"Z",\u0224:"Z",\u1e94:"Z",\u01b5:"Z",\u0132:"IJ",\u0152:"OE",\u1d00:"A",\u1d01:"AE",\u0299:"B",\u1d03:"B",\u1d04:"C",\u1d05:"D",\u1d07:"E",\ua730:"F",\u0262:"G",\u029b:"G",\u029c:"H",\u026a:"I",\u0281:"R",\u1d0a:"J",\u1d0b:"K",\u029f:"L",\u1d0c:"L",\u1d0d:"M",\u0274:"N",\u1d0f:"O",\u0276:"OE",\u1d10:"O",\u1d15:"OU",\u1d18:"P",\u0280:"R",\u1d0e:"N",\u1d19:"R",\ua731:"S",\u1d1b:"T",\u2c7b:"E",\u1d1a:"R",\u1d1c:"U",\u1d20:"V",\u1d21:"W",\u028f:"Y",\u1d22:"Z",\u00e1:"a",\u0103:"a",\u1eaf:"a",\u1eb7:"a",\u1eb1:"a",\u1eb3:"a",\u1eb5:"a",\u01ce:"a",\u00e2:"a",\u1ea5:"a",\u1ead:"a",\u1ea7:"a",\u1ea9:"a",\u1eab:"a",\u00e4:"a",\u01df:"a",\u0227:"a",\u01e1:"a",\u1ea1:"a",\u0201:"a",\u00e0:"a",\u1ea3:"a",\u0203:"a",\u0101:"a",\u0105:"a",\u1d8f:"a",\u1e9a:"a",\u00e5:"a",\u01fb:"a",\u1e01:"a",\u2c65:"a",\u00e3:"a",\ua733:"aa",\u00e6:"ae",\u01fd:"ae",\u01e3:"ae",\ua735:"ao",\ua737:"au",\ua739:"av",\ua73b:"av",\ua73d:"ay",\u1e03:"b",\u1e05:"b",\u0253:"b",\u1e07:"b",\u1d6c:"b",\u1d80:"b",\u0180:"b",\u0183:"b",\u0275:"o",\u0107:"c",\u010d:"c",\u00e7:"c",\u1e09:"c",\u0109:"c",\u0255:"c",\u010b:"c",\u0188:"c",\u023c:"c",\u010f:"d",\u1e11:"d",\u1e13:"d",\u0221:"d",\u1e0b:"d",\u1e0d:"d",\u0257:"d",\u1d91:"d",\u1e0f:"d",\u1d6d:"d",\u1d81:"d",\u0111:"d",\u0256:"d",\u018c:"d",\u0131:"i",\u0237:"j",\u025f:"j",\u0284:"j",\u01f3:"dz",\u01c6:"dz",\u00e9:"e",\u0115:"e",\u011b:"e",\u0229:"e",\u1e1d:"e",\u00ea:"e",\u1ebf:"e",\u1ec7:"e",\u1ec1:"e",\u1ec3:"e",\u1ec5:"e",\u1e19:"e",\u00eb:"e",\u0117:"e",\u1eb9:"e",\u0205:"e",\u00e8:"e",\u1ebb:"e",\u0207:"e",\u0113:"e",\u1e17:"e",\u1e15:"e",\u2c78:"e",\u0119:"e",\u1d92:"e",\u0247:"e",\u1ebd:"e",\u1e1b:"e",\ua76b:"et",\u1e1f:"f",\u0192:"f",\u1d6e:"f",\u1d82:"f",\u01f5:"g",\u011f:"g",\u01e7:"g",\u0123:"g",\u011d:"g",\u0121:"g",\u0260:"g",\u1e21:"g",\u1d83:"g",\u01e5:"g",\u1e2b:"h",\u021f:"h",\u1e29:"h",\u0125:"h",\u2c68:"h",\u1e27:"h",\u1e23:"h",\u1e25:"h",\u0266:"h",\u1e96:"h",\u0127:"h",\u0195:"hv",\u00ed:"i",\u012d:"i",\u01d0:"i",\u00ee:"i",\u00ef:"i",\u1e2f:"i",\u1ecb:"i",\u0209:"i",\u00ec:"i",\u1ec9:"i",\u020b:"i",\u012b:"i",\u012f:"i",\u1d96:"i",\u0268:"i",\u0129:"i",\u1e2d:"i",\ua77a:"d",\ua77c:"f",\u1d79:"g",\ua783:"r",\ua785:"s",\ua787:"t",\ua76d:"is",\u01f0:"j",\u0135:"j",\u029d:"j",\u0249:"j",\u1e31:"k",\u01e9:"k",\u0137:"k",\u2c6a:"k",\ua743:"k",\u1e33:"k",\u0199:"k",\u1e35:"k",\u1d84:"k",\ua741:"k",\ua745:"k",\u013a:"l",\u019a:"l",\u026c:"l",\u013e:"l",\u013c:"l",\u1e3d:"l",\u0234:"l",\u1e37:"l",\u1e39:"l",\u2c61:"l",\ua749:"l",\u1e3b:"l",\u0140:"l",\u026b:"l",\u1d85:"l",\u026d:"l",\u0142:"l",\u01c9:"lj",\u017f:"s",\u1e9c:"s",\u1e9b:"s",\u1e9d:"s",\u1e3f:"m",\u1e41:"m",\u1e43:"m",\u0271:"m",\u1d6f:"m",\u1d86:"m",\u0144:"n",\u0148:"n",\u0146:"n",\u1e4b:"n",\u0235:"n",\u1e45:"n",\u1e47:"n",\u01f9:"n",\u0272:"n",\u1e49:"n",\u019e:"n",\u1d70:"n",\u1d87:"n",\u0273:"n",\u00f1:"n",\u01cc:"nj",\u00f3:"o",\u014f:"o",\u01d2:"o",\u00f4:"o",\u1ed1:"o",\u1ed9:"o",\u1ed3:"o",\u1ed5:"o",\u1ed7:"o",\u00f6:"o",\u022b:"o",\u022f:"o",\u0231:"o",\u1ecd:"o",\u0151:"o",\u020d:"o",\u00f2:"o",\u1ecf:"o",\u01a1:"o",\u1edb:"o",\u1ee3:"o",\u1edd:"o",\u1edf:"o",\u1ee1:"o",\u020f:"o",\ua74b:"o",\ua74d:"o",\u2c7a:"o",\u014d:"o",\u1e53:"o",\u1e51:"o",\u01eb:"o",\u01ed:"o",\u00f8:"o",\u01ff:"o",\u00f5:"o",\u1e4d:"o",\u1e4f:"o",\u022d:"o",\u01a3:"oi",\ua74f:"oo",\u025b:"e",\u1d93:"e",\u0254:"o",\u1d97:"o",\u0223:"ou",\u1e55:"p",\u1e57:"p",\ua753:"p",\u01a5:"p",\u1d71:"p",\u1d88:"p",\ua755:"p",\u1d7d:"p",\ua751:"p",\ua759:"q",\u02a0:"q",\u024b:"q",\ua757:"q",\u0155:"r",\u0159:"r",\u0157:"r",\u1e59:"r",\u1e5b:"r",\u1e5d:"r",\u0211:"r",\u027e:"r",\u1d73:"r",\u0213:"r",\u1e5f:"r",\u027c:"r",\u1d72:"r",\u1d89:"r",\u024d:"r",\u027d:"r",\u2184:"c",\ua73f:"c",\u0258:"e",\u027f:"r",\u015b:"s",\u1e65:"s",\u0161:"s",\u1e67:"s",\u015f:"s",\u015d:"s",\u0219:"s",\u1e61:"s",\u1e63:"s",\u1e69:"s",\u0282:"s",\u1d74:"s",\u1d8a:"s",\u023f:"s",\u0261:"g",\u1d11:"o",\u1d13:"o",\u1d1d:"u",\u0165:"t",\u0163:"t",\u1e71:"t",\u021b:"t",\u0236:"t",\u1e97:"t",\u2c66:"t",\u1e6b:"t",\u1e6d:"t",\u01ad:"t",\u1e6f:"t",\u1d75:"t",\u01ab:"t",\u0288:"t",\u0167:"t",\u1d7a:"th",\u0250:"a",\u1d02:"ae",\u01dd:"e",\u1d77:"g",\u0265:"h",\u02ae:"h",\u02af:"h",\u1d09:"i",\u029e:"k",\ua781:"l",\u026f:"m",\u0270:"m",\u1d14:"oe",\u0279:"r",\u027b:"r",\u027a:"r",\u2c79:"r",\u0287:"t",\u028c:"v",\u028d:"w",\u028e:"y",\ua729:"tz",\u00fa:"u",\u016d:"u",\u01d4:"u",\u00fb:"u",\u1e77:"u",\u00fc:"u",\u01d8:"u",\u01da:"u",\u01dc:"u",\u01d6:"u",\u1e73:"u",\u1ee5:"u",\u0171:"u",\u0215:"u",\u00f9:"u",\u1ee7:"u",\u01b0:"u",\u1ee9:"u",\u1ef1:"u",\u1eeb:"u",\u1eed:"u",\u1eef:"u",\u0217:"u",\u016b:"u",\u1e7b:"u",\u0173:"u",\u1d99:"u",\u016f:"u",\u0169:"u",\u1e79:"u",\u1e75:"u",\u1d6b:"ue",\ua778:"um",\u2c74:"v",\ua75f:"v",\u1e7f:"v",\u028b:"v",\u1d8c:"v",\u2c71:"v",\u1e7d:"v",\ua761:"vy",\u1e83:"w",\u0175:"w",\u1e85:"w",\u1e87:"w",\u1e89:"w",\u1e81:"w",\u2c73:"w",\u1e98:"w",\u1e8d:"x",\u1e8b:"x",\u1d8d:"x",\u00fd:"y",\u0177:"y",\u00ff:"y",\u1e8f:"y",\u1ef5:"y",\u1ef3:"y",\u01b4:"y",\u1ef7:"y",\u1eff:"y",\u0233:"y",\u1e99:"y",\u024f:"y",\u1ef9:"y",\u017a:"z",\u017e:"z",\u1e91:"z",\u0291:"z",\u2c6c:"z",\u017c:"z",\u1e93:"z",\u0225:"z",\u1e95:"z",\u1d76:"z",\u1d8e:"z",\u0290:"z",\u01b6:"z",\u0240:"z",\ufb00:"ff",\ufb03:"ffi",\ufb04:"ffl",\ufb01:"fi",\ufb02:"fl",\u0133:"ij",\u0153:"oe",\ufb06:"st",\u2090:"a",\u2091:"e",\u1d62:"i",\u2c7c:"j",\u2092:"o",\u1d63:"r",\u1d64:"u",\u1d65:"v",\u2093:"x"};function S(o){return o?o.replace(/[^A-Za-z0-9[\] ]/g,function(m){return Se[m]||m}):""}function I(o,m=" ",t="",a){let n=[];if(a){const s=o.split(new RegExp(`([${a}]+)`,"g")),c=s[s.length-1];c>""&&(m&&t?n=W(c,m,t):n.push(c))}else n=W(o,m,t);return n}function W(o,m,t){const a=[],d=o.split(new RegExp(`(?:[${t}])([^${t}]+)(?:[${t}])|([^${m}]+)`,"g")),s=d.length;let c;const g=new RegExp(`[${t}]+`,"g");for(let y=0;y<s;y+=1)c=d[y],c&&c.length&&c!==m&&a.push(c.replace(g,""));return a}function C(o,m){if(!m||"object"!=typeof o)return o.toString();if(m.endsWith("()"))return o[m.slice(0,m.length-2)]().toString();const a=m.replace(/\[(\w+)\]/g,".$1").replace(/^\./,"").split(".");for(const n of a)n in o&&(o=o[n]);return o?o.toString():""}var e=r(54438),F=r(39555),A=r(35990),Ne=r(18359),M=r(49969);const E="220ms cubic-bezier(0, 0, 0.2, 1)",we=(0,M.hZ)("typeaheadAnimation",[(0,M.wk)("animated-down",(0,M.iF)({height:"*",overflow:"hidden"})),(0,M.kY)("* => animated-down",[(0,M.iF)({height:0,overflow:"hidden"}),(0,M.i0)(E)]),(0,M.wk)("animated-up",(0,M.iF)({height:"*",overflow:"hidden"})),(0,M.kY)("* => animated-up",[(0,M.iF)({height:"*",overflow:"hidden"}),(0,M.i0)(E)]),(0,M.kY)("* => unanimated",(0,M.i0)("0s"))]),Oe=["ulElement"],ve=["liElements"],ke=(o,m,t,a)=>({matches:o,itemTemplate:m,query:t,$implicit:a}),Ie=(o,m,t,a)=>({item:o,index:m,match:t,query:a});function Ae(o,m){}function De(o,m){if(1&o&&e.nrm(0,"span",4),2&o){const t=m.match,a=m.query,n=e.XpG();e.Y8G("innerHtml",n.highlight(t,a),e.npT)}}function be(o,m){if(1&o&&(e.j41(0,"h6",8),e.EFF(1),e.k0s()),2&o){const t=e.XpG().$implicit;e.R7$(),e.JRh(t)}}function We(o,m){}function Fe(o,m){if(1&o){const t=e.RV6();e.j41(0,"button",9,2),e.bIt("click",function(n){e.eBV(t);const d=e.XpG().$implicit,s=e.XpG(2);return e.Njj(s.selectMatch(d,n))})("mouseenter",function(){e.eBV(t);const n=e.XpG().$implicit,d=e.XpG(2);return e.Njj(d.selectActive(n))}),e.DNE(2,We,0,0,"ng-template",3),e.k0s()}if(2&o){const t=e.XpG(),a=t.$implicit,n=t.index,d=e.XpG(2),s=e.sdS(2);e.AVh("active",d.isActive(a)),e.Y8G("id",d.popupId+"-"+n)("@typeaheadAnimation",d.animationState),e.R7$(2),e.Y8G("ngTemplateOutlet",d.itemTemplate||s)("ngTemplateOutletContext",e.ziG(6,Ie,a.item,n,a,d.query))}}function Ee(o,m){if(1&o&&e.DNE(0,be,2,1,"h6",6)(1,Fe,3,11,"ng-template",7),2&o){const t=m.$implicit;e.Y8G("ngIf",t.isHeader()),e.R7$(),e.Y8G("ngIf",!t.isHeader())}}function Re(o,m){if(1&o&&e.DNE(0,Ee,2,2,"ng-template",5),2&o){const t=e.XpG();e.Y8G("ngForOf",t.matches)}}let Le=0,Be=(()=>{class o{get typeaheadTemplateMethods(){return{selectMatch:this.selectMatch.bind(this),selectActive:this.selectActive.bind(this),isActive:this.isActive.bind(this)}}constructor(t,a,n,d){this.positionService=t,this.renderer=a,this.element=n,this.changeDetectorRef=d,this.activeChangeEvent=new e.bkB,this.isFocused=!1,this.positionServiceSubscription=new Ne.yU,this.height=0,this.popupId="ngb-typeahead-"+Le++,this._matches=[],this.renderer.setAttribute(this.element.nativeElement,"id",this.popupId),this.positionServiceSubscription.add(this.positionService.event$?.subscribe(()=>{if(this.isAnimated)return this.animationState=this.isTopPosition?"animated-up":"animated-down",void this.changeDetectorRef.detectChanges();this.animationState="unanimated",this.changeDetectorRef.detectChanges()}))}get active(){return this._active}set active(t){this._active=t,this.activeChanged()}get matches(){return this._matches}set matches(t){if(this.positionService.setOptions({modifiers:{flip:{enabled:this.adaptivePosition}},allowedPositions:["top","bottom"]}),this._matches=t,this.needScrollbar=this.typeaheadScrollable&&this.typeaheadOptionsInScrollableView<this.matches.length,this.typeaheadScrollable&&setTimeout(()=>{this.setScrollableMode()}),this.typeaheadIsFirstItemActive&&this._matches.length>0&&(this.setActive(this._matches[0]),this._active?.isHeader()&&this.nextActiveMatch()),this._active&&!this.typeaheadIsFirstItemActive){const a=this._matches.find(n=>n.value===this._active?.value);if(a)return void this.selectActive(a);this.active=void 0}}get isTopPosition(){return this.element.nativeElement.classList.contains("top")}get optionsListTemplate(){return this.parent?this.parent.optionsListTemplate:void 0}get isAnimated(){return!!this.parent&&this.parent.isAnimated}get adaptivePosition(){return!!this.parent&&this.parent.adaptivePosition}get typeaheadScrollable(){return!!this.parent&&this.parent.typeaheadScrollable}get typeaheadOptionsInScrollableView(){return this.parent?this.parent.typeaheadOptionsInScrollableView:5}get typeaheadIsFirstItemActive(){return!this.parent||this.parent.typeaheadIsFirstItemActive}get itemTemplate(){return this.parent?this.parent.typeaheadItemTemplate:void 0}get canSelectItemsOnBlur(){return!!this.parent?.selectItemOnBlur}selectActiveMatch(t){this._active&&this.parent?.typeaheadSelectFirstItem&&this.selectMatch(this._active),!this.parent?.typeaheadSelectFirstItem&&t&&this.selectMatch(this._active)}activeChanged(){if(!this._active)return;const t=this.matches.indexOf(this._active);this.activeChangeEvent.emit(`${this.popupId}-${t}`)}prevActiveMatch(){if(!this._active)return;const t=this.matches.indexOf(this._active);this.setActive(this.matches[t-1<0?this.matches.length-1:t-1]),this._active.isHeader()&&this.prevActiveMatch(),this.typeaheadScrollable&&this.scrollPrevious(t)}nextActiveMatch(){const t=this._active?this.matches.indexOf(this._active):-1;this.setActive(this.matches[t+1>this.matches.length-1?0:t+1]),this._active?.isHeader()&&this.nextActiveMatch(),this.typeaheadScrollable&&this.scrollNext(t)}selectActive(t){this.isFocused=!0,this.setActive(t)}highlight(t,a){let s,c,n=t.value,d=(this.parent&&this.parent.typeaheadLatinize?S(n):n).toLowerCase();if("object"==typeof a){const g=a.length;for(let y=0;y<g;y+=1)s=d.indexOf(a[y]),c=a[y].length,s>=0&&c>0&&(n=`${n.substring(0,s)}<strong>${n.substring(s,s+c)}</strong>${n.substring(s+c)}`,d=`${d.substring(0,s)}????????${"??".repeat(c)}??????????${d.substring(s+c)}`)}else a&&(s=d.indexOf(a),c=a.length,s>=0&&c>0&&(n=`${n.substring(0,s)}<strong>${n.substring(s,s+c)}</strong>${n.substring(s+c)}`));return n}focusLost(){this.isFocused=!1,this.canSelectItemsOnBlur||this.setActive(void 0)}isActive(t){return this.active===t}selectMatch(t,a){return a&&(a.stopPropagation(),a.preventDefault()),this.parent?.changeModel(t),setTimeout(()=>this.parent?.typeaheadOnSelect.emit(t),0),!1}setScrollableMode(){if(this.ulElement||(this.ulElement=this.element),this.liElements?.first){const t=F.Aq.getStyles(this.ulElement.nativeElement),a=F.Aq.getStyles(this.liElements.first.nativeElement),n=parseFloat((t["padding-bottom"]?t["padding-bottom"]:"").replace("px","")),d=parseFloat((t["padding-top"]?t["padding-top"]:"0").replace("px","")),s=parseFloat((a.height?a.height:"0").replace("px",""));this.guiHeight=`${this.typeaheadOptionsInScrollableView*s+d+n}px`}this.renderer.setStyle(this.element.nativeElement,"visibility","visible")}scrollPrevious(t){if(0!==t){if(this.liElements&&this.ulElement){const a=this.liElements.toArray()[t-1];a&&!this.isScrolledIntoView(a.nativeElement)&&(this.ulElement.nativeElement.scrollTop=a.nativeElement.offsetTop)}}else this.scrollToBottom()}scrollNext(t){if(t+1>this.matches.length-1)this.scrollToTop();else if(this.liElements&&this.ulElement){const a=this.liElements.toArray()[t+1];a&&!this.isScrolledIntoView(a.nativeElement)&&(this.ulElement.nativeElement.scrollTop=a.nativeElement.offsetTop-Number(this.ulElement.nativeElement.offsetHeight)+Number(a.nativeElement.offsetHeight))}}ngOnDestroy(){this.positionServiceSubscription.unsubscribe()}setActive(t){let a;this._active=t,null==this._active||this._active.isHeader()||(a=t),this.parent?.typeaheadOnPreview.emit(a)}isScrolledIntoView(t){if(!this.ulElement)return!1;const a=this.ulElement.nativeElement.scrollTop,n=a+Number(this.ulElement.nativeElement.offsetHeight),d=t.offsetTop;return d+t.offsetHeight<=n&&d>=a}scrollToBottom(){this.ulElement?.nativeElement&&(this.ulElement.nativeElement.scrollTop=this.ulElement.nativeElement.scrollHeight)}scrollToTop(){this.ulElement?.nativeElement&&(this.ulElement.nativeElement.scrollTop=0)}static{this.\u0275fac=function(a){return new(a||o)(e.rXU(A.DF),e.rXU(e.sFG),e.rXU(e.aKT),e.rXU(e.gRc))}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["typeahead-container"]],viewQuery:function(a,n){if(1&a&&(e.GBs(Oe,5),e.GBs(ve,5)),2&a){let d;e.mGM(d=e.lsd())&&(n.ulElement=d.first),e.mGM(d=e.lsd())&&(n.liElements=d)}},hostAttrs:[1,"dropdown","open","bottom","dropdown-menu",2,"position","absolute","display","block"],hostVars:7,hostBindings:function(a,n){1&a&&e.bIt("mouseleave",function(){return n.focusLost()})("blur",function(){return n.focusLost()}),2&a&&(e.BMQ("role","listbox"),e.xc7("height",n.needScrollbar?n.guiHeight:"auto")("visibility","inherit"),e.AVh("dropup",n.dropup))},outputs:{activeChangeEvent:"activeChange"},features:[e.Jv_([A.DF])],decls:5,vars:7,consts:[["bsItemTemplate",""],["bs4Template",""],["liElements",""],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"innerHtml"],["ngFor","",3,"ngForOf"],["class","dropdown-header",4,"ngIf"],[3,"ngIf"],[1,"dropdown-header"],["role","option",1,"dropdown-item",3,"click","mouseenter","id"]],template:function(a,n){if(1&a&&e.DNE(0,Ae,0,0,"ng-template",3)(1,De,1,1,"ng-template",null,0,e.C5r)(3,Re,1,1,"ng-template",null,1,e.C5r),2&a){const d=e.sdS(2),s=e.sdS(4);e.Y8G("ngTemplateOutlet",n.optionsListTemplate||s)("ngTemplateOutletContext",e.ziG(2,ke,n.matches,n.itemTemplate||d,n.query,n.typeaheadTemplateMethods))}},dependencies:[l.T3,l.pM,l.bT],styles:[".dropdown[_nghost-%COMP%]{z-index:1000}.dropdown-menu[_nghost-%COMP%], .dropdown-menu[_ngcontent-%COMP%]{overflow-y:auto;height:100px}"],data:{animation:[we]}})}}return o})();var R=r(36941),D=r(74402),L=r(983),Ve=r(22806),B=r(43236),N=r(39974),V=r(54360);function P(o,m=B.E){return(0,N.N)((t,a)=>{let n=null,d=null,s=null;const c=()=>{if(n){n.unsubscribe(),n=null;const y=d;d=null,a.next(y)}};function g(){const y=s+o,Ce=m.now();if(Ce<y)return n=this.schedule(void 0,y-Ce),void a.add(n);c()}t.subscribe((0,V._)(a,y=>{d=y,s=m.now(),n||(n=m.schedule(g,o),a.add(n))},()=>{c(),a.complete()},void 0,()=>{d=n=null}))})}var U=r(88141),b=r(25558),w=r(31397),Pe=r(5964),Ue=r(46649);const je=(o,m)=>(o.push(m),o);class O{constructor(m,t=m,a=!1){this.item=m,this.value=t,this.header=a}isHeader(){return this.header}toString(){return this.value}}let T=(()=>{class o{constructor(){this.adaptivePosition=!1,this.isAnimated=!1,this.hideResultsOnBlur=!0,this.cancelRequestOnFocusLost=!1,this.selectFirstItem=!0,this.isFirstItemActive=!0,this.minLength=1,this.selectItemOnBlur=!1}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275prov=e.jDH({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})(),u=(()=>{class o{constructor(t,a,n,d,s,c,g){this.changeDetection=n,this.element=d,this.ngControl=s,this.renderer=c,this.typeaheadMinLength=1,this.adaptivePosition=!1,this.isAnimated=!1,this.typeaheadWaitMs=0,this.typeaheadLatinize=!0,this.typeaheadSingleWords=!0,this.typeaheadWordDelimiters=" ",this.typeaheadMultipleSearchDelimiters=",",this.typeaheadPhraseDelimiters="'\"",this.typeaheadScrollable=!1,this.typeaheadOptionsInScrollableView=5,this.typeaheadSelectFirstItem=!0,this.typeaheadIsFirstItemActive=!0,this.typeaheadLoading=new e.bkB,this.typeaheadNoResults=new e.bkB,this.typeaheadOnSelect=new e.bkB,this.typeaheadOnPreview=new e.bkB,this.typeaheadOnBlur=new e.bkB,this.dropup=!1,this.isOpen=!1,this.list="list",this.isActiveItemChanged=!1,this.isFocused=!1,this.cancelRequestOnFocusLost=!1,this.selectItemOnBlur=!1,this.keyUpEventEmitter=new e.bkB,this.placement="bottom left",this._matches=[],this._subscriptions=[],this._outsideClickListener=()=>{},this._typeahead=t.createLoader(d,g,c).provide({provide:T,useValue:a}),Object.assign(this,{typeaheadHideResultsOnBlur:a.hideResultsOnBlur,cancelRequestOnFocusLost:a.cancelRequestOnFocusLost,typeaheadSelectFirstItem:a.selectFirstItem,typeaheadIsFirstItemActive:a.isFirstItemActive,typeaheadMinLength:a.minLength,adaptivePosition:a.adaptivePosition,isAnimated:a.isAnimated,selectItemOnBlur:a.selectItemOnBlur})}get matches(){return this._matches}ngOnInit(){this.typeaheadOptionsLimit=this.typeaheadOptionsLimit||20,this.typeaheadMinLength=void 0===this.typeaheadMinLength?1:this.typeaheadMinLength,void 0===this.typeaheadAsync&&!(0,D.A)(this.typeahead)&&(this.typeaheadAsync=!1),(0,D.A)(this.typeahead)&&(this.typeaheadAsync=!0),this.typeaheadAsync?this.asyncActions():this.syncActions(),this.checkDelimitersConflict()}onInput(t){const a=void 0!==t.target.value?t.target.value:void 0!==t.target.textContent?t.target.textContent:t.target.innerText;null!=a&&a.trim().length>=this.typeaheadMinLength?(this.typeaheadLoading.emit(!0),this.keyUpEventEmitter.emit(t.target.value)):(this.typeaheadLoading.emit(!1),this.typeaheadNoResults.emit(!1),this.hide())}onChange(t){if(this._container){if(27===t.keyCode||"Escape"===t.key)return void this.hide();if(38===t.keyCode||"ArrowUp"===t.key)return this.isActiveItemChanged=!0,void this._container.prevActiveMatch();if(40===t.keyCode||"ArrowDown"===t.key)return this.isActiveItemChanged=!0,void this._container.nextActiveMatch();if(13===t.keyCode||"Enter"===t.key)return void this._container.selectActiveMatch()}}onFocus(){this.isFocused=!0,setTimeout(()=>{0===this.typeaheadMinLength&&(this.typeaheadLoading.emit(!0),this.keyUpEventEmitter.emit(this.element.nativeElement.value||""))},0)}onBlur(){this.isFocused=!1,this._container&&!this._container.isFocused&&this.typeaheadOnBlur.emit(this._container.active),!this.container&&0===this._matches?.length&&this.typeaheadOnBlur.emit(new O(this.element.nativeElement.value,this.element.nativeElement.value,!1))}onKeydown(t){if(this._container&&((9===t.keyCode||"Tab"===t.key)&&this.onBlur(),9===t.keyCode||"Tab"===t.key||13===t.keyCode||"Enter"===t.key)){if(t.preventDefault(),this.typeaheadSelectFirstItem)return void this._container.selectActiveMatch();this.typeaheadSelectFirstItem||(this._container.selectActiveMatch(this.isActiveItemChanged),this.isActiveItemChanged=!1,this.hide())}}changeModel(t){if(!t)return;let a;if(this.typeaheadMultipleSearch&&this._allEnteredValue){const n=this._allEnteredValue.split(new RegExp(`([${this.typeaheadMultipleSearchDelimiters}]+)`));this._allEnteredValue=n.slice(0,n.length-1).concat(t.value).join(""),a=this._allEnteredValue}else a=t.value;this.ngControl.viewToModelUpdate(a),this.ngControl.control?.setValue(a),this.changeDetection.markForCheck(),this.hide()}show(){if(this._typeahead.attach(Be).to(this.container).position({attachment:(this.dropup?"top":"bottom")+" left"}).show({typeaheadRef:this,placement:this.placement,animation:!1,dropup:this.dropup}),this._outsideClickListener=this.renderer.listen("document","click",a=>{0===this.typeaheadMinLength&&this.element.nativeElement.contains(a.target)||!this.typeaheadHideResultsOnBlur||this.element.nativeElement.contains(a.target)||this.onOutsideClick()}),!this._typeahead.instance||!this.ngControl.control)return;this._container=this._typeahead.instance,this._container.parent=this;const t=(this.typeaheadLatinize?S(this.ngControl.control.value):this.ngControl.control.value).toString().toLowerCase();this._container.query=this.tokenizeQuery(t),this._container.matches=this._matches,this.element.nativeElement.focus(),this._container.activeChangeEvent.subscribe(a=>{this.activeDescendant=a,this.changeDetection.markForCheck()}),this.isOpen=!0}hide(){this._typeahead.isShown&&(this._typeahead.hide(),this._outsideClickListener(),this._container=void 0,this.isOpen=!1,this.changeDetection.markForCheck()),this.typeaheadOnPreview.emit()}onOutsideClick(){this._container&&!this._container.isFocused&&this.hide()}ngOnDestroy(){for(const t of this._subscriptions)t.unsubscribe();this._typeahead.dispose()}asyncActions(){this._subscriptions.push(this.keyUpEventEmitter.pipe(P(this.typeaheadWaitMs),(0,U.M)(t=>this._allEnteredValue=t),(0,b.n)(()=>this.typeahead?this.typeahead:L.w)).subscribe(t=>{this.finalizeAsyncCall(t)}))}syncActions(){this._subscriptions.push(this.keyUpEventEmitter.pipe(P(this.typeaheadWaitMs),(0,w.Z)(t=>{this._allEnteredValue=t;const a=this.normalizeQuery(t);return this.typeahead?((0,D.A)(this.typeahead)?this.typeahead:(0,Ve.H)(this.typeahead)).pipe((0,Pe.p)(d=>!!d&&this.testMatch(this.normalizeOption(d),a)),function Ge(){return(0,N.N)((o,m)=>{(function He(o,m){return(0,N.N)((0,Ue.S)(o,m,arguments.length>=2,!1,!0))})(je,[])(o).subscribe(m)})}()):L.w})).subscribe(t=>{this.finalizeAsyncCall(t)}))}normalizeOption(t){const a=C(t,this.typeaheadOptionField);return(this.typeaheadLatinize?S(a):a).toLowerCase()}tokenizeQuery(t){let a=t;return this.typeaheadMultipleSearch&&this.typeaheadSingleWords?this.haveCommonCharacters(`${this.typeaheadPhraseDelimiters}${this.typeaheadWordDelimiters}`,this.typeaheadMultipleSearchDelimiters)||(a=I(a,this.typeaheadWordDelimiters,this.typeaheadPhraseDelimiters,this.typeaheadMultipleSearchDelimiters)):a=this.typeaheadSingleWords?I(a,this.typeaheadWordDelimiters,this.typeaheadPhraseDelimiters):I(a,void 0,void 0,this.typeaheadMultipleSearchDelimiters),a}normalizeQuery(t){let a=(this.typeaheadLatinize?S(t):t).toString().toLowerCase();return a=this.tokenizeQuery(a),a}testMatch(t,a){let n;if("object"==typeof a){n=a.length;for(let d=0;d<n;d+=1)if(a[d].length>0&&t.indexOf(a[d])<0)return!1;return!0}return t.indexOf(a)>=0}finalizeAsyncCall(t){if(this.prepareMatches(t||[]),this.typeaheadLoading.emit(!1),this.typeaheadNoResults.emit(!this.hasMatches()),this.hasMatches()){if(this.isFocused||!this.cancelRequestOnFocusLost)if(this._container&&this.ngControl.control){const n=((this.typeaheadLatinize?S(this.ngControl.control.value):this.ngControl.control.value)||"").toString().toLowerCase();this._container.query=this.tokenizeQuery(n),this._container.matches=this._matches}else this.show()}else this.hide()}prepareMatches(t){const a=t.slice(0,this.typeaheadOptionsLimit),n=this.typeaheadOrderBy?this.orderMatches(a):a;if(this.typeaheadGroupField){let d=[];n.map(c=>C(c,this.typeaheadGroupField)).filter((c,g,y)=>y.indexOf(c)===g).forEach(c=>{d.push(new O(c,c,!0)),d=d.concat(n.filter(g=>C(g,this.typeaheadGroupField)===c).map(g=>new O(g,C(g,this.typeaheadOptionField))))}),this._matches=d}else this._matches=n.map(d=>new O(d,C(d,this.typeaheadOptionField)))}orderMatches(t){if(!t.length)return t;if(null!=this.typeaheadOrderBy&&"object"==typeof this.typeaheadOrderBy&&0===Object.keys(this.typeaheadOrderBy).length)return console.error("Field and direction properties for typeaheadOrderBy have to be set according to documentation!"),t;const{field:a,direction:n}=this.typeaheadOrderBy||{};return!n||"asc"!==n&&"desc"!==n?(console.error('typeaheadOrderBy direction has to equal "asc" or "desc". Please follow the documentation.'),t):"string"==typeof t[0]?"asc"===n?t.sort():t.sort().reverse():a&&"string"==typeof a?t.sort((d,s)=>{const c=C(d,a),g=C(s,a);return c<g?"asc"===n?-1:1:c>g?"asc"===n?1:-1:0}):(console.error("typeaheadOrderBy field has to set according to the documentation."),t)}hasMatches(){return this._matches.length>0}checkDelimitersConflict(){if(this.typeaheadMultipleSearch&&this.typeaheadSingleWords&&this.haveCommonCharacters(`${this.typeaheadPhraseDelimiters}${this.typeaheadWordDelimiters}`,this.typeaheadMultipleSearchDelimiters))throw new Error(`Delimiters used in typeaheadMultipleSearchDelimiters must be different\n          from delimiters used in typeaheadWordDelimiters (current value: ${this.typeaheadWordDelimiters}) and\n          typeaheadPhraseDelimiters (current value: ${this.typeaheadPhraseDelimiters}).\n          Please refer to the documentation`)}haveCommonCharacters(t,a){for(let n=0;n<t.length;n++)if(t.charAt(n).indexOf(a)>-1)return!0;return!1}static{this.\u0275fac=function(a){return new(a||o)(e.rXU(R.Li),e.rXU(T),e.rXU(e.gRc),e.rXU(e.aKT),e.rXU(h.vO),e.rXU(e.sFG),e.rXU(e.c1b))}}static{this.\u0275dir=e.FsC({type:o,selectors:[["","typeahead",""]],hostVars:4,hostBindings:function(a,n){1&a&&e.bIt("input",function(s){return n.onInput(s)})("keyup",function(s){return n.onChange(s)})("click",function(){return n.onFocus()})("focus",function(){return n.onFocus()})("blur",function(){return n.onBlur()})("keydown",function(s){return n.onKeydown(s)}),2&a&&e.BMQ("aria-activedescendant",n.activeDescendant)("aria-owns",n.isOpen?n._container.popupId:null)("aria-expanded",n.isOpen)("aria-autocomplete",n.list)},inputs:{typeahead:"typeahead",typeaheadMinLength:"typeaheadMinLength",adaptivePosition:"adaptivePosition",isAnimated:"isAnimated",typeaheadWaitMs:"typeaheadWaitMs",typeaheadOptionsLimit:"typeaheadOptionsLimit",typeaheadOptionField:"typeaheadOptionField",typeaheadGroupField:"typeaheadGroupField",typeaheadOrderBy:"typeaheadOrderBy",typeaheadAsync:"typeaheadAsync",typeaheadLatinize:"typeaheadLatinize",typeaheadSingleWords:"typeaheadSingleWords",typeaheadWordDelimiters:"typeaheadWordDelimiters",typeaheadMultipleSearch:"typeaheadMultipleSearch",typeaheadMultipleSearchDelimiters:"typeaheadMultipleSearchDelimiters",typeaheadPhraseDelimiters:"typeaheadPhraseDelimiters",typeaheadItemTemplate:"typeaheadItemTemplate",optionsListTemplate:"optionsListTemplate",typeaheadScrollable:"typeaheadScrollable",typeaheadOptionsInScrollableView:"typeaheadOptionsInScrollableView",typeaheadHideResultsOnBlur:"typeaheadHideResultsOnBlur",typeaheadSelectFirstItem:"typeaheadSelectFirstItem",typeaheadIsFirstItemActive:"typeaheadIsFirstItemActive",container:"container",dropup:"dropup"},outputs:{typeaheadLoading:"typeaheadLoading",typeaheadNoResults:"typeaheadNoResults",typeaheadOnSelect:"typeaheadOnSelect",typeaheadOnPreview:"typeaheadOnPreview",typeaheadOnBlur:"typeaheadOnBlur"},exportAs:["bs-typeahead"],features:[e.Jv_([R.Li,A.DF])]})}}return o})(),Ke=(()=>{class o{static forRoot(){return{ngModule:o,providers:[]}}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275mod=e.$C({type:o})}static{this.\u0275inj=e.G2t({imports:[l.MD]})}}return o})();var f=r(37472);let H=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-adaptive-position"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","adaptivePosition"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("adaptivePosition",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),j=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-animated"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","isAnimated"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("isAnimated",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),G=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-basic"]],standalone:!1,decls:4,vars:5,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,3,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();var v=r(71985),k=r(7673),xe=r(28793),K=r(96697),x=r(85343),Ye=r(73703),Xe=r(58750);function z(o,m){return m?t=>(0,xe.x)(m.pipe((0,K.s)(1),function ze(){return(0,N.N)((o,m)=>{o.subscribe((0,V._)(m,x.l))})}()),t.pipe(z(o))):(0,w.Z)((t,a)=>(0,Xe.Tg)(o(t,a)).pipe((0,K.s)(1),(0,Ye.u)(t)))}var $e=r(41584);function _e(o,m){1&o&&(e.j41(0,"div"),e.EFF(1,"Loading"),e.k0s())}function Ze(){return Object.assign(new T,{cancelRequestOnFocusLost:!0})}let Y=(()=>{class o{constructor(){this.statesComplex=[{id:1,name:"Alabama",region:"South"},{id:2,name:"Alaska",region:"West"},{id:3,name:"Arizona",region:"West"},{id:4,name:"Arkansas",region:"South"},{id:5,name:"California",region:"West"},{id:6,name:"Colorado",region:"West"},{id:7,name:"Connecticut",region:"Northeast"},{id:8,name:"Delaware",region:"South"},{id:9,name:"Florida",region:"South"},{id:10,name:"Georgia",region:"South"},{id:11,name:"Hawaii",region:"West"},{id:12,name:"Idaho",region:"West"},{id:13,name:"Illinois",region:"Midwest"},{id:14,name:"Indiana",region:"Midwest"},{id:15,name:"Iowa",region:"Midwest"},{id:16,name:"Kansas",region:"Midwest"},{id:17,name:"Kentucky",region:"South"},{id:18,name:"Louisiana",region:"South"},{id:19,name:"Maine",region:"Northeast"},{id:21,name:"Maryland",region:"South"},{id:22,name:"Massachusetts",region:"Northeast"},{id:23,name:"Michigan",region:"Midwest"},{id:24,name:"Minnesota",region:"Midwest"},{id:25,name:"Mississippi",region:"South"},{id:26,name:"Missouri",region:"Midwest"},{id:27,name:"Montana",region:"West"},{id:28,name:"Nebraska",region:"Midwest"},{id:29,name:"Nevada",region:"West"},{id:30,name:"New Hampshire",region:"Northeast"},{id:31,name:"New Jersey",region:"Northeast"},{id:32,name:"New Mexico",region:"West"},{id:33,name:"New York",region:"Northeast"},{id:34,name:"North Dakota",region:"Midwest"},{id:35,name:"North Carolina",region:"South"},{id:36,name:"Ohio",region:"Midwest"},{id:37,name:"Oklahoma",region:"South"},{id:38,name:"Oregon",region:"West"},{id:39,name:"Pennsylvania",region:"Northeast"},{id:40,name:"Rhode Island",region:"Northeast"},{id:41,name:"South Carolina",region:"South"},{id:42,name:"South Dakota",region:"Midwest"},{id:43,name:"Tennessee",region:"South"},{id:44,name:"Texas",region:"South"},{id:45,name:"Utah",region:"West"},{id:46,name:"Vermont",region:"Northeast"},{id:47,name:"Virginia",region:"South"},{id:48,name:"Washington",region:"South"},{id:49,name:"West Virginia",region:"South"},{id:50,name:"Wisconsin",region:"Midwest"},{id:51,name:"Wyoming",region:"West"}],this.dataSource=new v.c(t=>{t.next(this.asyncSelected)}).pipe((0,w.Z)(t=>this.getStatesAsObservable(t)),function Je(o,m=B.E){const t=(0,$e.O)(o,m);return z(()=>t)}(1e3))}getStatesAsObservable(t){const a=new RegExp(t,"i");return(0,k.of)(this.statesComplex.filter(n=>a.test(n.name)))}changeTypeaheadLoading(t){this.typeaheadLoading=t}typeaheadOnSelect(t){console.log("Selected value: ",t.value)}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-cancel-on-focus-lost"]],standalone:!1,features:[e.Jv_([{provide:T,useFactory:Ze}])],decls:5,vars:7,consts:[[1,"card","card-block","card-header"],["typeaheadOptionField","name","placeholder","Locations loaded with timeout",1,"form-control",3,"ngModelChange","typeaheadLoading","typeaheadOnSelect","ngModel","typeahead","typeaheadOptionsLimit"],[4,"ngIf"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.asyncSelected,s)||(n.asyncSelected=s),s}),e.bIt("typeaheadLoading",function(s){return n.changeTypeaheadLoading(s)})("typeaheadOnSelect",function(s){return n.typeaheadOnSelect(s)}),e.k0s(),e.DNE(4,_e,2,0,"div",2)),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,5,n.asyncSelected),""),e.R7$(2),e.R50("ngModel",n.asyncSelected),e.Y8G("typeahead",n.dataSource)("typeaheadOptionsLimit",7),e.R7$(),e.Y8G("ngIf",n.typeaheadLoading))},dependencies:[l.bT,h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();function Qe(){return Object.assign(new T,{hideResultsOnBlur:!1})}let X=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-config"]],standalone:!1,features:[e.Jv_([{provide:T,useFactory:Qe}])],decls:1,vars:2,consts:[[1,"form-control",3,"ngModelChange","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"input",0),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states))},dependencies:[h.me,h.BC,h.vS,u],encapsulation:2})}}return o})(),$=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-container"]],standalone:!1,decls:4,vars:5,consts:[[1,"card","card-block","card-header","mb-3"],["container","body",1,"form-control",3,"ngModelChange","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,3,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),J=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-delay"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadWaitMs"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadWaitMs",1e3))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),_=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-dropup"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","dropup"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("dropup",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),Z=(()=>{class o{constructor(){this.statesComplex=[{id:1,name:"Alabama",region:"South"},{id:2,name:"Alaska",region:"West"},{id:3,name:"Arizona",region:"West"},{id:4,name:"Arkansas",region:"South"},{id:5,name:"California",region:"West"},{id:6,name:"Colorado",region:"West"},{id:7,name:"Connecticut",region:"Northeast"},{id:8,name:"Delaware",region:"South"},{id:9,name:"Florida",region:"South"},{id:10,name:"Georgia",region:"South"},{id:11,name:"Hawaii",region:"West"},{id:12,name:"Idaho",region:"West"},{id:13,name:"Illinois",region:"Midwest"},{id:14,name:"Indiana",region:"Midwest"},{id:15,name:"Iowa",region:"Midwest"},{id:16,name:"Kansas",region:"Midwest"},{id:17,name:"Kentucky",region:"South"},{id:18,name:"Louisiana",region:"South"},{id:19,name:"Maine",region:"Northeast"},{id:21,name:"Maryland",region:"South"},{id:22,name:"Massachusetts",region:"Northeast"},{id:23,name:"Michigan",region:"Midwest"},{id:24,name:"Minnesota",region:"Midwest"},{id:25,name:"Mississippi",region:"South"},{id:26,name:"Missouri",region:"Midwest"},{id:27,name:"Montana",region:"West"},{id:28,name:"Nebraska",region:"Midwest"},{id:29,name:"Nevada",region:"West"},{id:30,name:"New Hampshire",region:"Northeast"},{id:31,name:"New Jersey",region:"Northeast"},{id:32,name:"New Mexico",region:"West"},{id:33,name:"New York",region:"Northeast"},{id:34,name:"North Dakota",region:"Midwest"},{id:35,name:"North Carolina",region:"South"},{id:36,name:"Ohio",region:"Midwest"},{id:37,name:"Oklahoma",region:"South"},{id:38,name:"Oregon",region:"West"},{id:39,name:"Pennsylvania",region:"Northeast"},{id:40,name:"Rhode Island",region:"Northeast"},{id:41,name:"South Carolina",region:"South"},{id:42,name:"South Dakota",region:"Midwest"},{id:43,name:"Tennessee",region:"South"},{id:44,name:"Texas",region:"South"},{id:45,name:"Utah",region:"West"},{id:46,name:"Vermont",region:"Northeast"},{id:47,name:"Virginia",region:"South"},{id:48,name:"Washington",region:"South"},{id:49,name:"West Virginia",region:"South"},{id:50,name:"Wisconsin",region:"Midwest"},{id:51,name:"Wyoming",region:"West"}]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-field"]],standalone:!1,decls:4,vars:5,consts:[[1,"card","card-block","card-header","mb-3"],["typeaheadOptionField","name",1,"form-control",3,"ngModelChange","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.customSelected,s)||(n.customSelected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,3,n.customSelected),""),e.R7$(2),e.R50("ngModel",n.customSelected),e.Y8G("typeahead",n.statesComplex))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),Q=(()=>{class o{constructor(){this.statesComplex=[{id:1,name:"Alabama",region:"South"},{id:2,name:"Alaska",region:"West"},{id:3,name:"Arizona",region:"West"},{id:4,name:"Arkansas",region:"South"},{id:5,name:"California",region:"West"},{id:6,name:"Colorado",region:"West"},{id:7,name:"Connecticut",region:"Northeast"},{id:8,name:"Delaware",region:"South"},{id:9,name:"Florida",region:"South"},{id:10,name:"Georgia",region:"South"},{id:11,name:"Hawaii",region:"West"},{id:12,name:"Idaho",region:"West"},{id:13,name:"Illinois",region:"Midwest"},{id:14,name:"Indiana",region:"Midwest"},{id:15,name:"Iowa",region:"Midwest"},{id:16,name:"Kansas",region:"Midwest"},{id:17,name:"Kentucky",region:"South"},{id:18,name:"Louisiana",region:"South"},{id:19,name:"Maine",region:"Northeast"},{id:21,name:"Maryland",region:"South"},{id:22,name:"Massachusetts",region:"Northeast"},{id:23,name:"Michigan",region:"Midwest"},{id:24,name:"Minnesota",region:"Midwest"},{id:25,name:"Mississippi",region:"South"},{id:26,name:"Missouri",region:"Midwest"},{id:27,name:"Montana",region:"West"},{id:28,name:"Nebraska",region:"Midwest"},{id:29,name:"Nevada",region:"West"},{id:30,name:"New Hampshire",region:"Northeast"},{id:31,name:"New Jersey",region:"Northeast"},{id:32,name:"New Mexico",region:"West"},{id:33,name:"New York",region:"Northeast"},{id:34,name:"North Dakota",region:"Midwest"},{id:35,name:"North Carolina",region:"South"},{id:36,name:"Ohio",region:"Midwest"},{id:37,name:"Oklahoma",region:"South"},{id:38,name:"Oregon",region:"West"},{id:39,name:"Pennsylvania",region:"Northeast"},{id:40,name:"Rhode Island",region:"Northeast"},{id:41,name:"South Carolina",region:"South"},{id:42,name:"South Dakota",region:"Midwest"},{id:43,name:"Tennessee",region:"South"},{id:44,name:"Texas",region:"South"},{id:45,name:"Utah",region:"West"},{id:46,name:"Vermont",region:"Northeast"},{id:47,name:"Virginia",region:"South"},{id:48,name:"Washington",region:"South"},{id:49,name:"West Virginia",region:"South"},{id:50,name:"Wisconsin",region:"Midwest"},{id:51,name:"Wyoming",region:"West"}],this.dataSource=new v.c(t=>{t.next(this.asyncSelected)}).pipe((0,w.Z)(t=>this.getStatesAsObservable(t)))}getStatesAsObservable(t){const a=new RegExp(t,"i");return(0,k.of)(this.statesComplex.filter(n=>a.test(n.name)))}changeTypeaheadLoading(t){this.typeaheadLoading=t}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-async"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header"],["typeaheadOptionField","name","placeholder","Locations loaded via observable",1,"form-control",3,"ngModelChange","typeaheadLoading","ngModel","typeahead","typeaheadAsync"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.asyncSelected,s)||(n.asyncSelected=s),s}),e.bIt("typeaheadLoading",function(s){return n.changeTypeaheadLoading(s)}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.asyncSelected),""),e.R7$(2),e.R50("ngModel",n.asyncSelected),e.Y8G("typeahead",n.dataSource)("typeaheadAsync",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),q=(()=>{class o{constructor(){this.stateCtrl=new h.hs,this.myForm=new h.J3({state:this.stateCtrl}),this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-reactive-form"]],standalone:!1,decls:5,vars:7,consts:[[1,"card","card-block","card-header"],[3,"formGroup"],["formControlName","state","placeholder","Typeahead inside a form",1,"form-control",3,"typeahead","typeaheadOptionsLimit","typeaheadMinLength"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"form",1),e.nrm(4,"input",2),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,5,n.myForm.value.state),""),e.R7$(2),e.Y8G("formGroup",n.myForm),e.R7$(),e.Y8G("typeahead",n.states)("typeaheadOptionsLimit",7)("typeaheadMinLength",0))},dependencies:[h.qT,h.me,h.BC,h.cb,h.j4,h.JD,u,l.TG],encapsulation:2})}}return o})(),ee=(()=>{class o{constructor(){this.model={address:"312 Sundown Lane",state:null},this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-form"]],standalone:!1,decls:12,vars:6,consts:[[1,"card","card-block","card-header"],[1,"form-group","mb-3"],["for","address"],["type","text","id","address","required","","name","address",1,"form-control",3,"ngModelChange","ngModel"],["for","state"],["id","state","name","state",1,"form-control",3,"ngModelChange","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"form")(4,"div",1)(5,"label",2),e.EFF(6,"Address"),e.k0s(),e.j41(7,"input",3),e.mxI("ngModelChange",function(s){return e.DH7(n.model.address,s)||(n.model.address=s),s}),e.k0s()(),e.j41(8,"div",1)(9,"label",4),e.EFF(10,"State"),e.k0s(),e.j41(11,"input",5),e.mxI("ngModelChange",function(s){return e.DH7(n.model.state,s)||(n.model.state=s),s}),e.k0s()()()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.model),""),e.R7$(6),e.R50("ngModel",n.model.address),e.R7$(4),e.R50("ngModel",n.model.state),e.Y8G("typeahead",n.states))},dependencies:[h.qT,h.me,h.BC,h.cb,h.YS,h.vS,h.cV,u,l.TG],encapsulation:2})}}return o})(),ne=(()=>{class o{constructor(){this.statesComplex=[{id:1,name:"Alabama",region:"South"},{id:2,name:"Alaska",region:"West"},{id:3,name:"Arizona",region:"West"},{id:4,name:"Arkansas",region:"South"},{id:5,name:"California",region:"West"},{id:6,name:"Colorado",region:"West"},{id:7,name:"Connecticut",region:"Northeast"},{id:8,name:"Delaware",region:"South"},{id:9,name:"Florida",region:"South"},{id:10,name:"Georgia",region:"South"},{id:11,name:"Hawaii",region:"West"},{id:12,name:"Idaho",region:"West"},{id:13,name:"Illinois",region:"Midwest"},{id:14,name:"Indiana",region:"Midwest"},{id:15,name:"Iowa",region:"Midwest"},{id:16,name:"Kansas",region:"Midwest"},{id:17,name:"Kentucky",region:"South"},{id:18,name:"Louisiana",region:"South"},{id:19,name:"Maine",region:"Northeast"},{id:21,name:"Maryland",region:"South"},{id:22,name:"Massachusetts",region:"Northeast"},{id:23,name:"Michigan",region:"Midwest"},{id:24,name:"Minnesota",region:"Midwest"},{id:25,name:"Mississippi",region:"South"},{id:26,name:"Missouri",region:"Midwest"},{id:27,name:"Montana",region:"West"},{id:28,name:"Nebraska",region:"Midwest"},{id:29,name:"Nevada",region:"West"},{id:30,name:"New Hampshire",region:"Northeast"},{id:31,name:"New Jersey",region:"Northeast"},{id:32,name:"New Mexico",region:"West"},{id:33,name:"New York",region:"Northeast"},{id:34,name:"North Dakota",region:"Midwest"},{id:35,name:"North Carolina",region:"South"},{id:36,name:"Ohio",region:"Midwest"},{id:37,name:"Oklahoma",region:"South"},{id:38,name:"Oregon",region:"West"},{id:39,name:"Pennsylvania",region:"Northeast"},{id:40,name:"Rhode Island",region:"Northeast"},{id:41,name:"South Carolina",region:"South"},{id:42,name:"South Dakota",region:"Midwest"},{id:43,name:"Tennessee",region:"South"},{id:44,name:"Texas",region:"South"},{id:45,name:"Utah",region:"West"},{id:46,name:"Vermont",region:"Northeast"},{id:47,name:"Virginia",region:"South"},{id:48,name:"Washington",region:"South"},{id:49,name:"West Virginia",region:"South"},{id:50,name:"Wisconsin",region:"Midwest"},{id:51,name:"Wyoming",region:"West"}]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-grouping"]],standalone:!1,decls:4,vars:5,consts:[[1,"card","card-block","card-header","mb-3"],["typeaheadOptionField","name","typeaheadGroupField","region",1,"form-control",3,"ngModelChange","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.groupSelected,s)||(n.groupSelected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,3,n.groupSelected),""),e.R7$(2),e.R50("ngModel",n.groupSelected),e.Y8G("typeahead",n.statesComplex))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();function qe(o,m){if(1&o&&(e.j41(0,"h5"),e.EFF(1),e.nI1(2,"json"),e.k0s()),2&o){const t=m.item,a=m.index;e.R7$(),e.Lme("This is: ",e.bMT(2,2,t)," Index: ",a,"")}}let ae=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-item-template"]],standalone:!1,decls:6,vars:6,consts:[["customItemTemplate",""],[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadItemTemplate"]],template:function(a,n){if(1&a){const d=e.RV6();e.DNE(0,qe,3,4,"ng-template",null,0,e.C5r),e.j41(2,"pre",1),e.EFF(3),e.nI1(4,"json"),e.k0s(),e.j41(5,"input",2),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selected,c)||(n.selected=c),e.Njj(c)}),e.k0s()}if(2&a){const d=e.sdS(1);e.R7$(3),e.SpI("Model: ",e.bMT(4,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadItemTemplate",d)}},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();function en(o,m){if(1&o){const t=e.RV6();e.j41(0,"li",5),e.bIt("click",function(n){const d=e.eBV(t).$implicit,s=e.XpG().$implicit;return e.Njj(s.selectMatch(d,n))})("mouseenter",function(){const n=e.eBV(t).$implicit,d=e.XpG().$implicit;return e.Njj(d.selectActive(n))}),e.EFF(1),e.k0s()}if(2&o){const t=m.$implicit,a=e.XpG().$implicit;e.AVh("active",a.isActive(t)),e.R7$(),e.SpI(" ",t.item," ")}}function nn(o,m){if(1&o&&(e.j41(0,"ul",3),e.DNE(1,en,2,3,"li",4),e.k0s()),2&o){const t=m.matches;e.R7$(),e.Y8G("ngForOf",t)}}let te=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-templates"]],standalone:!1,decls:6,vars:6,consts:[["customListTemplate",""],[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","optionsListTemplate"],[1,"custom-list-group"],["class","custom-list-group-item",3,"active","click","mouseenter",4,"ngFor","ngForOf"],[1,"custom-list-group-item",3,"click","mouseenter"]],template:function(a,n){if(1&a){const d=e.RV6();e.j41(0,"pre",1),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",2),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selected,c)||(n.selected=c),e.Njj(c)}),e.k0s(),e.DNE(4,nn,2,1,"ng-template",null,0,e.C5r)}if(2&a){const d=e.sdS(5);e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("optionsListTemplate",d)}},dependencies:[l.Sq,h.me,h.BC,h.vS,u,l.TG],styles:[".custom-list-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:300px;padding-left:0;margin:0;list-style:none}.custom-list-group-item[_ngcontent-%COMP%]{position:relative;display:block;padding:.75rem 1.25rem;background-color:#fff}.custom-list-group-item.active[_ngcontent-%COMP%]{z-index:2;color:#fff;background-color:#ff4461;border-color:#ff4461}"]})}}return o})(),re=(()=>{class o{constructor(){this.frenchWords=["popularis\xe9","fran\xe7ais","int\xe9ress\xe9","g\xe9n\xe9rateur","r\xe9pandue","r\xe9p\xe9tition","s\xfaper"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-latinize"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadLatinize"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.frenchWords)("typeaheadLatinize",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),oe=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-min-length"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadMinLength"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadMinLength",0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();function an(o,m){1&o&&(e.j41(0,"div",3),e.EFF(1,"No Results Found"),e.k0s())}let ie=(()=>{class o{constructor(){this.noResult=!1,this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}typeaheadNoResults(t){this.noResult=t}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-no-result"]],standalone:!1,decls:5,vars:6,consts:[[1,"card","card-block","card-header"],["class","alert alert-danger",4,"ngIf"],[1,"form-control",3,"ngModelChange","typeaheadNoResults","ngModel","typeahead"],[1,"alert","alert-danger"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.DNE(3,an,2,0,"div",1),e.j41(4,"input",2),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.bIt("typeaheadNoResults",function(s){return n.typeaheadNoResults(s)}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.Y8G("ngIf",n.noResult),e.R7$(),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states))},dependencies:[l.bT,h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),se=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}typeaheadOnBlur(t){this.optionOnBlur=t?.item}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-on-blur"]],standalone:!1,features:[e.Jv_([{provide:T,useValue:{selectItemOnBlur:!0,hideResultsOnBlur:!0}}])],decls:7,vars:8,consts:[[1,"card","card-block","card-header"],[1,"form-control",3,"ngModelChange","typeaheadOnBlur","ngModel","typeahead"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"pre",0),e.EFF(4),e.nI1(5,"json"),e.k0s(),e.j41(6,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.bIt("typeaheadOnBlur",function(s){return n.typeaheadOnBlur(s)}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(3),e.SpI("Option on blur: ",e.bMT(5,6,n.optionOnBlur),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();function tn(o,m){if(1&o&&(e.j41(0,"span"),e.EFF(1),e.k0s()),2&o){const t=e.XpG();e.R7$(),e.JRh(null==t.previewOption?null:t.previewOption.region)}}function rn(o,m){1&o&&(e.j41(0,"span"),e.EFF(1,"N/A"),e.k0s())}let le=(()=>{class o{constructor(){this.states=[{id:1,name:"Alabama",region:"South"},{id:2,name:"Alaska",region:"West"},{id:3,name:"Arizona",region:"West"},{id:4,name:"Arkansas",region:"South"},{id:5,name:"California",region:"West"},{id:6,name:"Colorado",region:"West"},{id:7,name:"Connecticut",region:"Northeast"},{id:8,name:"Delaware",region:"South"},{id:9,name:"Florida",region:"South"},{id:10,name:"Georgia",region:"South"},{id:11,name:"Hawaii",region:"West"},{id:12,name:"Idaho",region:"West"},{id:13,name:"Illinois",region:"Midwest"},{id:14,name:"Indiana",region:"Midwest"},{id:15,name:"Iowa",region:"Midwest"},{id:16,name:"Kansas",region:"Midwest"},{id:17,name:"Kentucky",region:"South"},{id:18,name:"Louisiana",region:"South"},{id:19,name:"Maine",region:"Northeast"},{id:21,name:"Maryland",region:"South"},{id:22,name:"Massachusetts",region:"Northeast"},{id:23,name:"Michigan",region:"Midwest"},{id:24,name:"Minnesota",region:"Midwest"},{id:25,name:"Mississippi",region:"South"},{id:26,name:"Missouri",region:"Midwest"},{id:27,name:"Montana",region:"West"},{id:28,name:"Nebraska",region:"Midwest"},{id:29,name:"Nevada",region:"West"},{id:30,name:"New Hampshire",region:"Northeast"},{id:31,name:"New Jersey",region:"Northeast"},{id:32,name:"New Mexico",region:"West"},{id:33,name:"New York",region:"Northeast"},{id:34,name:"North Dakota",region:"Midwest"},{id:35,name:"North Carolina",region:"South"},{id:36,name:"Ohio",region:"Midwest"},{id:37,name:"Oklahoma",region:"South"},{id:38,name:"Oregon",region:"West"},{id:39,name:"Pennsylvania",region:"Northeast"},{id:40,name:"Rhode Island",region:"Northeast"},{id:41,name:"South Carolina",region:"South"},{id:42,name:"South Dakota",region:"Midwest"},{id:43,name:"Tennessee",region:"South"},{id:44,name:"Texas",region:"South"},{id:45,name:"Utah",region:"West"},{id:46,name:"Vermont",region:"Northeast"},{id:47,name:"Virginia",region:"South"},{id:48,name:"Washington",region:"South"},{id:49,name:"West Virginia",region:"South"},{id:50,name:"Wisconsin",region:"Midwest"},{id:51,name:"Wyoming",region:"West"}]}onSelect(t){this.selectedOption=t.item}onPreview(t){this.previewOption=t?t.item:void 0}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-on-select"]],standalone:!1,decls:13,vars:10,consts:[["noPreviewOption",""],[1,"card","card-block","card-header","mb-3"],["typeaheadOptionField","name",1,"form-control",3,"ngModelChange","typeaheadOnSelect","typeaheadOnPreview","ngModel","typeahead"],[1,"card","card-block","card-header","mb-3",2,"float","right","width","160px"],[4,"ngIf","ngIfElse"]],template:function(a,n){if(1&a){const d=e.RV6();e.j41(0,"pre",1),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"pre",1),e.EFF(4),e.nI1(5,"json"),e.k0s(),e.j41(6,"div")(7,"input",2),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selectedValue,c)||(n.selectedValue=c),e.Njj(c)}),e.bIt("typeaheadOnSelect",function(c){return e.eBV(d),e.Njj(n.onSelect(c))})("typeaheadOnPreview",function(c){return e.eBV(d),e.Njj(n.onPreview(c))}),e.k0s(),e.j41(8,"div",3),e.EFF(9," Preview region: "),e.DNE(10,tn,2,1,"span",4)(11,rn,2,0,"ng-template",null,0,e.C5r),e.k0s()()}if(2&a){const d=e.sdS(12);e.R7$(),e.SpI("Model: ",e.bMT(2,6,n.selectedValue),""),e.R7$(3),e.SpI("Selected option: ",e.bMT(5,8,n.selectedOption),""),e.R7$(3),e.R50("ngModel",n.selectedValue),e.Y8G("typeahead",n.states),e.R7$(3),e.Y8G("ngIf",n.previewOption)("ngIfElse",d)}},dependencies:[l.bT,h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),de=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-phrase-delimiters"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header"],["typeaheadPhraseDelimiters","&,",1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadSingleWords"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadSingleWords",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),he=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-scrollable"]],standalone:!1,decls:4,vars:7,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadScrollable","typeaheadOptionsInScrollableView"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,5,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadScrollable",!0)("typeaheadOptionsInScrollableView",5))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),ce=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-selected-first-item"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadSelectFirstItem"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadSelectFirstItem",!1))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),me=(()=>{class o{constructor(){this.typeaheadHideResultsOnBlur=!1,this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-show-on-blur"]],standalone:!1,decls:6,vars:7,consts:[["type","button",1,"btn","btn-primary","mb-3",3,"click"],[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadHideResultsOnBlur"]],template:function(a,n){1&a&&(e.j41(0,"button",0),e.bIt("click",function(){return n.typeaheadHideResultsOnBlur=!n.typeaheadHideResultsOnBlur}),e.EFF(1,"Toggle typeaheadHideResultsOnBlur\n"),e.k0s(),e.j41(2,"pre",1),e.EFF(3),e.nI1(4,"json"),e.k0s(),e.j41(5,"input",2),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(3),e.Lme("  typeaheadHideResultsOnBlur: ",n.typeaheadHideResultsOnBlur,"\n  Model: ",e.bMT(4,5,n.selected),"\n"),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadHideResultsOnBlur",n.typeaheadHideResultsOnBlur))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),pe=(()=>{class o{constructor(){this.typeaheadSingleWords=!0,this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-single-world"]],standalone:!1,decls:6,vars:7,consts:[["type","button",1,"btn","btn-primary",3,"click"],[1,"card","card-block","card-header"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadSingleWords"]],template:function(a,n){1&a&&(e.j41(0,"button",0),e.bIt("click",function(){return n.typeaheadSingleWords=!n.typeaheadSingleWords}),e.EFF(1,"Toggle typeaheadSingleWords\n"),e.k0s(),e.j41(2,"pre",1),e.EFF(3),e.nI1(4,"json"),e.k0s(),e.j41(5,"input",2),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(3),e.Lme("  typeaheadSingleWords: ",n.typeaheadSingleWords,"\n  Model: ",e.bMT(4,5,n.selected),"\n"),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadSingleWords",n.typeaheadSingleWords))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})(),ue=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-first-item-active"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header","mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadIsFirstItemActive"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadIsFirstItemActive",!1))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();var on=r(96354),sn=r(21626);function ln(o,m){if(1&o&&(e.j41(0,"div",3),e.EFF(1),e.k0s()),2&o){const t=e.XpG();e.R7$(),e.SpI(" ",t.errorMessage,"\n")}}let ge=(()=>{class o{constructor(t){this.http=t}ngOnInit(){this.suggestions$=new v.c(t=>{t.next(this.search)}).pipe((0,b.n)(t=>t?this.http.get("https://api.github.com/search/users",{params:{q:t}}).pipe((0,on.T)(a=>a&&a.items||[]),(0,U.M)(()=>x.l,a=>{this.errorMessage=a&&a.message||"Something goes wrong"})):(0,k.of)([])))}static{this.\u0275fac=function(a){return new(a||o)(e.rXU(sn.Qq))}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-async-http"]],standalone:!1,decls:5,vars:7,consts:[[1,"card","card-block","card-header"],["typeaheadOptionField","login","placeholder","Enter GitHub username",1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadAsync"],["class","alert alert-danger","role","alert",4,"ngIf"],["role","alert",1,"alert","alert-danger"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.search,s)||(n.search=s),s}),e.k0s(),e.DNE(4,ln,2,1,"div",2)),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,5,n.search),""),e.R7$(2),e.R50("ngModel",n.search),e.Y8G("typeahead",n.suggestions$)("typeaheadAsync",!0),e.R7$(),e.Y8G("ngIf",n.errorMessage))},dependencies:[l.bT,h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();function dn(o,m){if(1&o&&(e.j41(0,"span")(1,"strong"),e.EFF(2),e.k0s(),e.EFF(3),e.k0s()),2&o){const t=m.item;e.R7$(2),e.JRh(t.city),e.R7$(),e.SpI(" - ",t.code,"")}}let ye=(()=>{class o{constructor(){this.sortConfig1={direction:"desc"},this.sortConfig2={direction:"asc"},this.sortConfig3={direction:"asc",field:"city"},this.states=["New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Alaska","Alabama","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],this.cities=[{city:"Norton",state:"Virginia",code:"61523"},{city:"Grundy",state:"Virginia",code:"77054"},{city:"Coeburn",state:"Virginia",code:"01665"},{city:"Phoenix",state:"Arizona",code:"29128"},{city:"Tucson",state:"Arizona",code:"32084"},{city:"Mesa",state:"Arizona",code:"21465"},{city:"Independence",state:"Missouri",code:"26887"},{city:"Kansas City",state:"Missouri",code:"79286"},{city:"Springfield",state:"Missouri",code:"92325"},{city:"St. Louis",state:"Missouri",code:"64891"}]}ngOnInit(){this.states$=new v.c(t=>{t.next(this.selected4)}).pipe((0,b.n)(t=>{const a=new RegExp(t,"i");return(0,k.of)(this.states.filter(n=>a.test(n)))}))}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-ordering"]],standalone:!1,decls:44,vars:14,consts:[["customItemTemplate",""],[1,"mb-3"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadOrderBy"],["typeaheadOptionField","city","typeaheadGroupField","state",1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadItemTemplate","typeaheadOrderBy"],[1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadAsync","typeaheadOrderBy"]],template:function(a,n){if(1&a){const d=e.RV6();e.j41(0,"div",1)(1,"h6"),e.EFF(2,"Source - "),e.j41(3,"strong"),e.EFF(4,"array of string"),e.k0s(),e.EFF(5,". Order direction - "),e.j41(6,"strong"),e.EFF(7,"descending"),e.k0s()(),e.j41(8,"input",2),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selected1,c)||(n.selected1=c),e.Njj(c)}),e.k0s()(),e.j41(9,"div",1)(10,"h6"),e.EFF(11,"Source - "),e.j41(12,"strong"),e.EFF(13,"array of string"),e.k0s(),e.EFF(14,". Order direction - "),e.j41(15,"strong"),e.EFF(16,"ascending"),e.k0s()(),e.j41(17,"input",2),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selected2,c)||(n.selected2=c),e.Njj(c)}),e.k0s()(),e.j41(18,"div",1)(19,"h6"),e.EFF(20," Source - "),e.j41(21,"strong"),e.EFF(22,"array of objects"),e.k0s(),e.EFF(23,". Order direction - "),e.j41(24,"strong"),e.EFF(25,"ascending"),e.k0s(),e.EFF(26,", sort by "),e.j41(27,"strong"),e.EFF(28,"city"),e.k0s(),e.EFF(29,", group by "),e.j41(30,"strong"),e.EFF(31,"state"),e.k0s()(),e.j41(32,"input",3),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selected3,c)||(n.selected3=c),e.Njj(c)}),e.k0s(),e.DNE(33,dn,4,2,"ng-template",null,0,e.C5r),e.k0s(),e.j41(35,"div",1)(36,"h6"),e.EFF(37,"Source - "),e.j41(38,"strong"),e.EFF(39,"Observable of array of string"),e.k0s(),e.EFF(40,". Order direction - "),e.j41(41,"strong"),e.EFF(42,"descending"),e.k0s()(),e.j41(43,"input",4),e.mxI("ngModelChange",function(c){return e.eBV(d),e.DH7(n.selected4,c)||(n.selected4=c),e.Njj(c)}),e.k0s()()}if(2&a){const d=e.sdS(34);e.R7$(8),e.R50("ngModel",n.selected1),e.Y8G("typeahead",n.states)("typeaheadOrderBy",n.sortConfig1),e.R7$(9),e.R50("ngModel",n.selected2),e.Y8G("typeahead",n.states)("typeaheadOrderBy",n.sortConfig2),e.R7$(15),e.R50("ngModel",n.selected3),e.Y8G("typeahead",n.cities)("typeaheadItemTemplate",d)("typeaheadOrderBy",n.sortConfig3),e.R7$(11),e.R50("ngModel",n.selected4),e.Y8G("typeahead",n.states$)("typeaheadAsync",!0)("typeaheadOrderBy",n.sortConfig1)}},dependencies:[h.me,h.BC,h.vS,u],encapsulation:2})}}return o})(),Me=(()=>{class o{constructor(){this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["demo-typeahead-multiple-search"]],standalone:!1,decls:4,vars:6,consts:[[1,"card","card-block","card-header"],["typeaheadMultipleSearchDelimiters",",|",1,"form-control",3,"ngModelChange","ngModel","typeahead","typeaheadMultipleSearch"]],template:function(a,n){1&a&&(e.j41(0,"pre",0),e.EFF(1),e.nI1(2,"json"),e.k0s(),e.j41(3,"input",1),e.mxI("ngModelChange",function(s){return e.DH7(n.selected,s)||(n.selected=s),s}),e.k0s()),2&a&&(e.R7$(),e.SpI("Model: ",e.bMT(2,4,n.selected),""),e.R7$(2),e.R50("ngModel",n.selected),e.Y8G("typeahead",n.states)("typeaheadMultipleSearch",!0))},dependencies:[h.me,h.BC,h.vS,u,l.TG],encapsulation:2})}}return o})();const hn=[{name:"Overview",anchor:"overview",tabName:"overview",outlet:f.xK,content:[{title:"Basic array",anchor:"Basic-array",component:r(26499),html:r(73243),outlet:G},{title:"With animation",anchor:"animated",component:r(79967),html:r(72167),description:"You can enable animation via <code>isAnimated</code> input or config option",outlet:j},{title:"Adaptive position",anchor:"adaptive-position",description:"\n          <p>You can enable adaptive position via <code>adaptivePosition</code> input or config option</p>\n        ",component:r(92331),html:r(39091),outlet:H},{title:"Item template",anchor:"item-template",component:r(57175),html:r(49231),outlet:ae},{title:"List template",anchor:"list-template",component:r(54907),html:r(66499),outlet:te},{title:"Option field",anchor:"option-field",component:r(22707),html:r(22475),outlet:Z},{title:"Async data",anchor:"async-data",component:r(10947),html:r(35227),outlet:Q},{title:"Async using http request",anchor:"async-http-request",description:"\n          <p>Use http request to search for data. If you need to handle http error, do this inside <code>tap</code> operator.\n          Enter search value several times (10-15), and after a few success responses API should return an error\n          (GitHub limit for requests)</p>\n        ",component:r(89783),html:r(10895),outlet:ge},{title:"Cancel on focus lost",anchor:"cancel-on-focus-lost",description:"<p>Set config property <code>cancelRequestOnFocusLost</code> to <code>true</code> if you want to cancel async request on focus lost event</p>",component:r(84369),html:r(93685),outlet:Y},{title:"With delay",anchor:"delay",description:"\n          <p>Use <code>typeaheadWaitMs</code> to set minimal waiting time after last character typed\n          before typeahead kicks-in. In example a search begins with delay in 1 second</p>\n        ",component:r(83431),html:r(27807),outlet:J},{title:"Template-driven forms",anchor:"forms",description:"\n          <p>Typeahead can be used in template-driven forms. Keep in mind that value of <code>ngModel</code> is\n          <code>string</code></p>\n        ",component:r(12117),html:r(3161),outlet:ee},{title:"Reactive forms",anchor:"reactive-forms",description:"\n          <p>Typeahead can be used in reactive forms</p>\n        ",component:r(70083),html:r(66523),outlet:q},{title:"Grouping results",anchor:"grouping-results",component:r(99903),html:r(91207),outlet:ne},{title:"Ignore spaces and order",anchor:"single-world",component:r(57023),html:r(53735),description:'\n          <p>After setting <code>typeaheadSingleWords</code> input property to <code>true</code>\n          order of typed symbols and spaces between them will be ignored. For example, "<i>zona ari</i>"\n          will match with "<i>Arizona</i>"</p>\n        ',outlet:pe},{title:"Phrase delimiters",anchor:"phrase-delimiters",component:r(53543),html:r(84927),description:'\n          <p>Set the word delimiter by <code>typeaheadPhraseDelimiters</code> to match exact phrase.\n          This is demo with delimeters "<code>&</code>" and "<code>,</code>"</p>\n        ',outlet:de},{title:"Dropup",anchor:"dropup",component:r(35929),html:r(43149),outlet:_},{title:"On blur",anchor:"on-blur",description:"\n         <p>Returns an option on which user lost a focus. To reproduce start typing the name of the state, then focus\n         on one of the options with mouse or arrow keys and click outside of the typeahead</p>\n        ",component:r(13719),html:r(56591),outlet:se},{title:"Append to body",anchor:"container",description:"\n        <p><code>container</code> is an input property specifying the element the typeahead should be appended to.</p>\n        ",component:r(83263),html:r(29639),outlet:$},{title:"No result",anchor:"no-result",description:'\n         <p>Used to display the state when no matches were found. To see message\n         "No Results Found" enter the value that doesn\'t match anything from the list</p>\n        ',component:r(93855),html:r(91591),outlet:ie},{title:"Scrollable",anchor:"scrollable",component:r(94815),html:r(93223),outlet:he},{title:"Latinize",anchor:"latinize",description:"\n          <p>Use <code>typeaheadLatinize</code> property for matching latin symbols. If it is set\n          to <code>true</code> the word <strong>s\xfaper</strong> would match <strong>super</strong> and vice versa.</p>\n        ",component:r(6653),html:r(71409),outlet:re},{title:"On select / On preview",anchor:"on-select",description:"\n          <p><code>typeaheadOnSelect</code> event is fired when an option was selected.\n          Returns an object with this option.</p>\n          <p><code>typeaheadOnPreview</code> event is fired when an option was highlighted.\n          Returns an object with this option.</p>\n        ",component:r(15235),html:r(96699),outlet:le},{title:"Min length",anchor:"min-length",description:"\n          <p>Minimal number of characters that needs to be entered before typeahead kicks in. When set to 0, typeahead shows on focus with full list of options.</p>\n        ",component:r(80295),html:r(53343),outlet:oe},{title:"Show results on blur",anchor:"show-on-blur",description:"\n          <p>Use input property <code>typeaheadHideResultsOnBlur</code> or config property <code>hideResultsOnBlur</code>\n          to prevent hiding typeahead's results until a user doesn't choose an item</p>\n        ",component:r(42559),html:r(92679),outlet:me},{title:"Configuring defaults",anchor:"configuration",component:r(55773),html:r(16625),outlet:X},{title:"Is first item active",anchor:"first-item-active",description:"\n          <p>Use input property <code>typeaheadIsFirstItemActive</code> or config property <code>isFirstItemActive</code> to make the first item active/inactive </p>\n        ",component:r(18127),html:r(52055),outlet:ue},{title:"Selected first item",anchor:"selected-first-item",description:"\n          <p>Use <code>typeaheadSelectFirstItem</code> property to make the first item in options list unselectable by tab and enter.</p>\n        ",component:r(11059),html:r(27819),outlet:ce},{title:"Order results",anchor:"typeahead-ordering",description:"\n          <p>Use <code>typeaheadOrderBy</code> property to order your result by a certain field and in certain direction</p>\n        ",component:r(19197),html:r(7281),outlet:ye},{title:"Multiple search",anchor:"multiple-search",component:r(29407),html:r(70087),description:'\n          <p>Set <code>typeaheadMultipleSearch</code> input property to <code>true</code>\n          and provide the multiple search delimiter by <code>typeaheadMultipleSearchDelimiters</code>\n          to be able to search typeahead again after using one of the provided delimiters. Default delimiter\n          is "<code>,</code>" if <code>typeaheadMultipleSearchDelimiters</code> is not used.\n          After picking a first value from typeahead\n          dropdown, type "<code>,</code>" or "<code>|</code>" and then next value can be searched.\n          This is demo with delimeters "<code>,</code>" and "<code>|</code>"</p>\n        ',outlet:Me}]},{name:"Installation",anchor:"api-reference",tabName:"api",outlet:f.Mg,usage:r(41704),importInfo:'<span class="pln">ng add ngx</span><span class="pun">-</span><span class="pln">bootstrap </span> --component <span class="pln">typeahead</span>',content:[{title:"TypeaheadDirective",anchor:"TypeaheadDirective",outlet:f.r2},{title:"TypeaheadConfig",anchor:"bs-typeahead-config",outlet:f.TJ},{title:"TypeaheadOptionListContext",anchor:"typeahead-option-list-context",outlet:f.TJ},{title:"TypeaheadOptionItemContext",anchor:"typeahead-option-item-context",outlet:f.TJ},{title:"TypeaheadTemplateMethods",anchor:"typeahead-template method",outlet:f.TJ,showMethods:!0}]},{name:"Examples",anchor:"examples",tabName:"examples",outlet:f.xK,content:[{title:"Basic array",anchor:"Basic-array-ex",outlet:G},{title:"With animation",anchor:"animated-ex",outlet:j},{title:"Adaptive position",anchor:"adaptive-position-ex",outlet:H},{title:"Item template",anchor:"item-template-ex",outlet:ae},{title:"List template",anchor:"list-template-ex",outlet:te},{title:"Option field",anchor:"option-field-ex",outlet:Z},{title:"Async data",anchor:"async-data-ex",outlet:Q},{title:"Async using http request",anchor:"async-http-request-ex",outlet:ge},{title:"Cancel on focus lost",anchor:"cancel-on-focus-lost-ex",outlet:Y},{title:"With delay",anchor:"delay-ex",outlet:J},{title:"Template-driven forms",anchor:"forms-ex",outlet:ee},{title:"Reactive forms",anchor:"reactive-forms-ex",outlet:q},{title:"Grouping results",anchor:"grouping-results-ex",outlet:ne},{title:"Ignore spaces and order",anchor:"single-world-ex",outlet:pe},{title:"Phrase delimiters",anchor:"phrase-delimiters-ex",outlet:de},{title:"Dropup",anchor:"dropup-ex",outlet:_},{title:"On blur",anchor:"on-blur-ex",outlet:se},{title:"Append to body",anchor:"container-ex",outlet:$},{title:"No result",anchor:"no-result-ex",outlet:ie},{title:"Scrollable",anchor:"scrollable-ex",outlet:he},{title:"Latinize",anchor:"latinize-ex",outlet:re},{title:"On select / On preview",anchor:"on-select-ex",outlet:le},{title:"Min length",anchor:"min-length-ex",outlet:oe},{title:"Show results on blur",anchor:"show-on-blur-ex",outlet:me},{title:"Configuring defaults",anchor:"configuration-ex",outlet:X},{title:"Is first item active",anchor:"first-item-active-ex",outlet:ue},{title:"Selected first item",anchor:"selected-first-item-ex",outlet:ce},{title:"Order results",anchor:"typeahead-ordering-ex",outlet:ye},{title:"Multiple search",anchor:"multiple-search-ex",outlet:Me}]}];var cn=r(86223),mn=r(52439);let fe=(()=>{class o{constructor(){this.name="Typeahead",this.src="https://github.com/valor-software/ngx-bootstrap/tree/development/src/typeahead",this.componentContent=hn}static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275cmp=e.VBU({type:o,selectors:[["typeahead-section"]],standalone:!1,decls:4,vars:4,consts:[[3,"name","src","componentContent"],[3,"content"]],template:function(a,n){1&a&&(e.j41(0,"demo-section",0)(1,"p"),e.EFF(2,"The easiest way to add the typeahead component to your app (will be added to the root module)"),e.k0s(),e.nrm(3,"docs-section",1),e.k0s()),2&a&&(e.Y8G("name",n.name)("src",n.src)("componentContent",n.componentContent),e.R7$(3),e.Y8G("content",n.componentContent))},dependencies:[cn.q,mn.C],encapsulation:2,changeDetection:0})}}return o})();const pn=[{path:"",component:fe}];let un=(()=>{class o{static{this.\u0275fac=function(a){return new(a||o)}}static{this.\u0275mod=e.$C({type:o})}static{this.\u0275inj=e.G2t({imports:[l.MD,h.YN,h.X1,f.ky,Ke,Te.iI.forChild(pn)]})}}return o})()},39091:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [adaptivePosition]="true"\r\n       class="form-control">'},92331:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-adaptive-position',\r\n  templateUrl: './adaptive-position.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadAdaptivePositionComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},72167:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [isAnimated]="true"\r\n       class="form-control">\r\n'},79967:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-animated',\r\n  templateUrl: './animated.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadAnimatedComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},10895:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{ search | json }}</pre>\r\n\r\n<input [(ngModel)]="search"\r\n       typeaheadOptionField="login"\r\n       [typeahead]="suggestions$"\r\n       [typeaheadAsync]="true"\r\n       class="form-control"\r\n       placeholder="Enter GitHub username">\r\n\r\n<div class="alert alert-danger" role="alert" *ngIf="errorMessage">\r\n  {{ errorMessage }}\r\n</div>\r\n\r\n'},89783:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\n\r\ninterface GitHubUserSearchResponse {\r\n  total_count: number;\r\n  incomplete_results: boolean;\r\n  items: GitHubUser[];\r\n}\r\n\r\ninterface GitHubUser {\r\n  login: string;\r\n  id:  number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  score: number;\r\n}\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-async-http',\r\n  templateUrl: './async-http-request.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadAsyncHttpRequestComponent implements OnInit {\r\n  search?: string;\r\n  suggestions$?: Observable<GitHubUser[]>;\r\n  errorMessage?: string;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string | undefined>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          // using github public api to get users by name\r\n          return this.http.get<GitHubUserSearchResponse>(\r\n            'https://api.github.com/search/users', {\r\n            params: { q: query }\r\n          }).pipe(\r\n            map((data: GitHubUserSearchResponse) => data && data.items || []),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            })\r\n          );\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n}\r\n"},35227:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{ asyncSelected | json }}</pre>\r\n\r\n<input [(ngModel)]="asyncSelected"\r\n       [typeahead]="dataSource"\r\n       [typeaheadAsync]="true"\r\n       typeaheadOptionField="name"\r\n       (typeaheadLoading)="changeTypeaheadLoading($event)"\r\n       placeholder="Locations loaded via observable"\r\n       class="form-control">\r\n'},10947:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { Observable, of, Subscriber } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { DataSourceType } from '../interfaces/typeahead.interfaces';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-async',\r\n  templateUrl: './async.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadAsyncComponent {\r\n  asyncSelected?: string;\r\n  dataSource: Observable<DataSourceType[]>;\r\n  typeaheadLoading?: boolean;\r\n  statesComplex: DataSourceType[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n\r\n  constructor() {\r\n    this.dataSource = new Observable((observer: Subscriber<string>) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    })\r\n      .pipe(\r\n        mergeMap((token: string) => this.getStatesAsObservable(token))\r\n      );\r\n  }\r\n\r\n  getStatesAsObservable(token: string): Observable<DataSourceType[]> {\r\n    const query = new RegExp(token, 'i');\r\n\r\n    return of(\r\n      this.statesComplex.filter((state: DataSourceType) => {\r\n        return query.test(state.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n}\r\n"},73243:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       class="form-control">\r\n'},26499:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-basic',\r\n  templateUrl: './basic.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadBasicComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},93685:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{asyncSelected | json}}</pre>\r\n\r\n<input [(ngModel)]="asyncSelected"\r\n       [typeahead]="dataSource"\r\n       (typeaheadLoading)="changeTypeaheadLoading($event)"\r\n       (typeaheadOnSelect)="typeaheadOnSelect($event)"\r\n       [typeaheadOptionsLimit]="7"\r\n       typeaheadOptionField="name"\r\n       placeholder="Locations loaded with timeout"\r\n       class="form-control">\r\n<div *ngIf="typeaheadLoading">Loading</div>\r\n'},84369:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { Observable, Observer, of } from 'rxjs';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\r\nimport { mergeMap, delay } from 'rxjs/operators';\r\nimport { TypeaheadConfig } from 'ngx-bootstrap/typeahead';\r\nimport { DataSourceType } from '../interfaces/typeahead.interfaces';\r\n\r\nexport function getTypeaheadConfig(): TypeaheadConfig {\r\n  return Object.assign(new TypeaheadConfig(), { cancelRequestOnFocusLost: true });\r\n}\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-cancel-on-focus-lost',\r\n  templateUrl: './cancel-on-focus-lost.html',\r\n  providers: [{ provide: TypeaheadConfig, useFactory: getTypeaheadConfig }],\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadCancelRequestOnFocusLostComponent {\r\n  asyncSelected?: string;\r\n  typeaheadLoading?: boolean;\r\n  dataSource: Observable<DataSourceType[]>;\r\n  statesComplex: DataSourceType[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n\r\n  constructor() {\r\n    this.dataSource = new Observable((observer: Observer<string | undefined>) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    }).pipe(\r\n      mergeMap((token: string) => this.getStatesAsObservable(token)),\r\n      delay(1000)\r\n    );\r\n  }\r\n\r\n  getStatesAsObservable(token: string): Observable<DataSourceType[]> {\r\n    const query = new RegExp(token, 'i');\r\n\r\n    return of(\r\n      this.statesComplex.filter((state: DataSourceType) => {\r\n        return query.test(state.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n  typeaheadOnSelect(e: TypeaheadMatch): void {\r\n    console.log('Selected value: ', e.value);\r\n  }\r\n}\r\n"},16625:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       class="form-control">\r\n'},55773:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { TypeaheadConfig } from 'ngx-bootstrap/typeahead';\r\n\r\n// such override allows to keep some initial values\r\nexport function getTypeaheadConfig(): TypeaheadConfig {\r\n  return Object.assign(new TypeaheadConfig(), { hideResultsOnBlur: false });\r\n}\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-config',\r\n  templateUrl: './config.html',\r\n  providers: [{ provide: TypeaheadConfig, useFactory: getTypeaheadConfig }],\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadConfigComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},29639:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       container="body"\r\n       class="form-control">\r\n'},83263:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-container',\r\n  templateUrl: './container.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadContainerComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},27807:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadWaitMs]="1000"\r\n       class="form-control">\r\n'},83431:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-delay',\r\n  templateUrl: './delay.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadDelayComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},43149:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [dropup]="true"\r\n       class="form-control">\r\n'},35929:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-dropup',\r\n  templateUrl: './dropup.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadDropupComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},22475:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{customSelected | json}}</pre>\r\n<input [(ngModel)]="customSelected"\r\n       [typeahead]="statesComplex"\r\n       typeaheadOptionField="name"\r\n       class="form-control">\r\n'},22707:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { DataSourceType } from '../interfaces/typeahead.interfaces';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-field',\r\n  templateUrl: './field.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadFieldComponent {\r\n  customSelected?: string;\r\n  statesComplex: DataSourceType[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n}\r\n"},52055:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadIsFirstItemActive]="false"\r\n       class="form-control">\r\n'},18127:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-first-item-active',\r\n  templateUrl: './first-item-active.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadFirstItemActiveComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},3161:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{model | json}}</pre>\r\n\r\n<form>\r\n  <div class="form-group mb-3">\r\n    <label for="address">Address</label>\r\n    <input type="text" class="form-control" id="address" required\r\n           [(ngModel)]="model.address" name="address">\r\n  </div>\r\n  <div class="form-group mb-3">\r\n    <label for="state">State</label>\r\n    <input id="state" class="form-control" name="state"\r\n           [(ngModel)]="model.state" [typeahead]="states">\r\n  </div>\r\n</form>\r\n'},12117:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-form',\r\n  templateUrl: './form.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadFormComponent {\r\n  model = {\r\n    address: '312 Sundown Lane',\r\n    state: null\r\n  };\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},91207:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{groupSelected | json}}</pre>\r\n<input [(ngModel)]="groupSelected"\r\n       [typeahead]="statesComplex"\r\n       typeaheadOptionField="name"\r\n       typeaheadGroupField="region"\r\n       class="form-control">\r\n'},99903:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { DataSourceType } from '../interfaces/typeahead.interfaces';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-grouping',\r\n  templateUrl: './grouping.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadGroupingComponent {\r\n  groupSelected?: string;\r\n  statesComplex: DataSourceType[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n}\r\n"},49231:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<ng-template #customItemTemplate let-model="item" let-index="index">\r\n  <h5>This is: {{model | json}} Index: {{ index }}</h5>\r\n</ng-template>\r\n\r\n<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadItemTemplate]="customItemTemplate"\r\n       class="form-control">\r\n'},57175:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-item-template',\r\n  templateUrl: './item-template.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadItemTemplateComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},71409:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="frenchWords"\r\n       [typeaheadLatinize]="true"\r\n       class="form-control">\r\n'},6653:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-latinize',\r\n  templateUrl: './latinize.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadLatinizeComponent {\r\n  selected?: string;\r\n  frenchWords: string[] = [\r\n    'popularis\xe9',\r\n    'fran\xe7ais',\r\n    'int\xe9ress\xe9',\r\n    'g\xe9n\xe9rateur',\r\n    'r\xe9pandue',\r\n    'r\xe9p\xe9tition',\r\n    's\xfaper'\r\n    ];\r\n}\r\n"},66499:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [optionsListTemplate]="customListTemplate"\r\n       class="form-control">\r\n\r\n<ng-template #customListTemplate let-matches="matches" let-query="query" let-typeaheadTemplateMethods>\r\n  <ul class="custom-list-group">\r\n    <li class="custom-list-group-item"\r\n        *ngFor="let match of matches"\r\n        [class.active]="typeaheadTemplateMethods.isActive(match)"\r\n        (click)="typeaheadTemplateMethods.selectMatch(match, $event)"\r\n        (mouseenter)="typeaheadTemplateMethods.selectActive(match)">\r\n      {{ match.item }}\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n'},54907:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-templates',\r\n  templateUrl: './list-template.html',\r\n  styles: [`\r\n    .custom-list-group {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 300px;\r\n      padding-left: 0;\r\n      margin: 0;\r\n      list-style: none;\r\n    }\r\n\r\n    .custom-list-group-item {\r\n      position: relative;\r\n      display: block;\r\n      padding: .75rem 1.25rem;\r\n      background-color: #fff;\r\n    }\r\n\r\n    .custom-list-group-item.active {\r\n      z-index: 2;\r\n      color: #fff;\r\n      background-color: #FF4461;\r\n      border-color: #FF4461;\r\n    }\r\n  `],\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadListTemplateComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},53343:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadMinLength]="0"\r\n       class="form-control">\r\n'},80295:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-min-length',\r\n  templateUrl: './min-length.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadMinLengthComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},70087:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadMultipleSearch]="true"\r\n       typeaheadMultipleSearchDelimiters=",|"\r\n       class="form-control">\r\n'},29407:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-multiple-search',\r\n  templateUrl: './multiple-search.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadMultipleSearchComponent {\r\n  selected?: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},91591:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{selected | json}}</pre>\r\n<div class="alert alert-danger" *ngIf="noResult">No Results Found</div>\r\n\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       (typeaheadNoResults)="typeaheadNoResults($event)"\r\n       class="form-control">\r\n'},93855:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-no-result',\r\n  templateUrl: './no-result.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadNoResultComponent {\r\n  selected?: string;\r\n  noResult = false;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n}\r\n"},56591:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{selected | json}}</pre>\r\n<pre class="card card-block card-header">Option on blur: {{optionOnBlur | json}}</pre>\r\n\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       (typeaheadOnBlur)="typeaheadOnBlur($event)"\r\n       class="form-control">\r\n'},13719:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { TypeaheadMatch, TypeaheadConfig } from 'ngx-bootstrap/typeahead';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-on-blur',\r\n  templateUrl: './on-blur.html',\r\n  providers: [{ provide: TypeaheadConfig, useValue: { selectItemOnBlur: true, hideResultsOnBlur: true } }],\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadOnBlurComponent {\r\n  selected?: string;\r\n  optionOnBlur?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n\r\n  typeaheadOnBlur(event?: TypeaheadMatch<string>): void {\r\n    this.optionOnBlur = event?.item;\r\n  }\r\n}\r\n"},96699:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selectedValue | json}}</pre>\r\n<pre class="card card-block card-header mb-3">Selected option: {{selectedOption | json}}</pre>\r\n<div>\r\n    <input [(ngModel)]="selectedValue"\r\n        [typeahead]="states"\r\n        typeaheadOptionField="name"\r\n        (typeaheadOnSelect)="onSelect($event)"\r\n        (typeaheadOnPreview)="onPreview($event)"\r\n        class="form-control">\r\n    <div style="float:right;width:160px;"\r\n         class="card card-block card-header mb-3">\r\n        Preview region:\r\n        <span *ngIf="previewOption; else noPreviewOption">{{previewOption?.region}}</span>\r\n        <ng-template #noPreviewOption><span>N/A</span></ng-template>\r\n    </div>\r\n</div>\r\n'},15235:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead';\r\nimport { DataSourceType } from '../interfaces/typeahead.interfaces';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-on-select',\r\n  templateUrl: './on-select.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadOnSelectComponent {\r\n  selectedValue?: string;\r\n  selectedOption?: DataSourceType;\r\n  previewOption?: DataSourceType;\r\n  states: DataSourceType[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n\r\n  onSelect(event: TypeaheadMatch<DataSourceType>): void {\r\n    this.selectedOption = event.item;\r\n  }\r\n\r\n  onPreview(event: TypeaheadMatch<DataSourceType>): void {\r\n    if (event) {\r\n      this.previewOption = event.item;\r\n    } else {\r\n      this.previewOption = undefined;\r\n    }\r\n  }\r\n}\r\n"},7281:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<div class="mb-3">\r\n  <h6>Source - <strong>array of string</strong>. Order direction - <strong>descending</strong></h6>\r\n  <input [(ngModel)]="selected1"\r\n         [typeahead]="states"\r\n         [typeaheadOrderBy]="sortConfig1"\r\n         class="form-control">\r\n</div>\r\n  <div class="mb-3">\r\n  <h6>Source - <strong>array of string</strong>. Order direction - <strong>ascending</strong></h6>\r\n  <input [(ngModel)]="selected2"\r\n         [typeahead]="states"\r\n         [typeaheadOrderBy]="sortConfig2"\r\n         class="form-control">\r\n</div>\r\n<div class="mb-3">\r\n  <h6>\r\n    Source - <strong>array of objects</strong>. Order direction - <strong>ascending</strong>,\r\n    sort by <strong>city</strong>, group by <strong>state</strong>\r\n  </h6>\r\n  <input [(ngModel)]="selected3"\r\n         [typeahead]="cities"\r\n         typeaheadOptionField="city"\r\n         typeaheadGroupField="state"\r\n         [typeaheadItemTemplate]="customItemTemplate"\r\n         [typeaheadOrderBy]="sortConfig3"\r\n         class="form-control">\r\n\r\n  <ng-template #customItemTemplate let-model="item">\r\n    <span><strong>{{model.city}}</strong> - {{model.code}}</span>\r\n  </ng-template>\r\n</div>\r\n\r\n<div class="mb-3">\r\n  <h6>Source - <strong>Observable of array of string</strong>. Order direction - <strong>descending</strong></h6>\r\n  <input [(ngModel)]="selected4"\r\n         [typeahead]="states$"\r\n         [typeaheadAsync]="true"\r\n         [typeaheadOrderBy]="sortConfig1"\r\n         class="form-control">\r\n</div>\r\n'},19197:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TypeaheadOrder } from 'ngx-bootstrap/typeahead';\r\nimport { Observable, of, Subscriber } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-ordering',\r\n  templateUrl: './ordering.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadOrderingComponent implements OnInit {\r\n  selected1?: string;\r\n  selected2?: string;\r\n  selected3?: string;\r\n  selected4?: string;\r\n  sortConfig1: TypeaheadOrder = {\r\n    direction: 'desc'\r\n  };\r\n  sortConfig2: TypeaheadOrder = {\r\n    direction: 'asc'\r\n  };\r\n  sortConfig3: TypeaheadOrder = {\r\n    direction: 'asc',\r\n    field: 'city'\r\n  };\r\n  states$?: Observable<string[]>;\r\n  states: string[] = [\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Alaska',\r\n    'Alabama',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n  cities = [{\r\n    city: 'Norton',\r\n    state: 'Virginia',\r\n    code: '61523'\r\n  }, {\r\n    city: 'Grundy',\r\n    state: 'Virginia',\r\n    code: '77054'\r\n  }, {\r\n    city: 'Coeburn',\r\n    state: 'Virginia',\r\n    code: '01665'\r\n  }, {\r\n    city: 'Phoenix',\r\n    state: 'Arizona',\r\n    code: '29128'\r\n  }, {\r\n    city: 'Tucson',\r\n    state: 'Arizona',\r\n    code: '32084'\r\n  }, {\r\n    city: 'Mesa',\r\n    state: 'Arizona',\r\n    code: '21465'\r\n  }, {\r\n    city: 'Independence',\r\n    state: 'Missouri',\r\n    code: '26887'\r\n  }, {\r\n    city: 'Kansas City',\r\n    state: 'Missouri',\r\n    code: '79286'\r\n  }, {\r\n    city: 'Springfield',\r\n    state: 'Missouri',\r\n    code: '92325'\r\n  }, {\r\n    city: 'St. Louis',\r\n    state: 'Missouri',\r\n    code: '64891'\r\n  }];\r\n\r\n  ngOnInit(): void {\r\n    this.states$ = new Observable((observer: Subscriber<string>) => {\r\n      // Runs on every search\r\n      observer.next(this.selected4);\r\n    })\r\n      .pipe(\r\n        switchMap((token: string) => {\r\n          const query = new RegExp(token, 'i');\r\n\r\n          return of(\r\n            this.states.filter((state: string) => query.test(state))\r\n          );\r\n        })\r\n      );\r\n  }\r\n}\r\n"},84927:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadSingleWords]="true"\r\n       typeaheadPhraseDelimiters="&,"\r\n       class="form-control">\r\n'},53543:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-phrase-delimiters',\r\n  templateUrl: './phrase-delimiters.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadPhraseDelimitersComponent {\r\n  selected?: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},66523:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header">Model: {{myForm.value.state | json}}</pre>\r\n\r\n<form [formGroup]="myForm">\r\n  <input formControlName="state"\r\n         [typeahead]="states"\r\n         [typeaheadOptionsLimit]="7"\r\n         [typeaheadMinLength]="0"\r\n         placeholder="Typeahead inside a form"\r\n         class="form-control">\r\n</form>\r\n'},70083:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-reactive-form',\r\n  templateUrl: './reactive-form.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadReactiveFormComponent {\r\n  stateCtrl = new UntypedFormControl();\r\n\r\n  myForm = new UntypedFormGroup({\r\n    state: this.stateCtrl\r\n  });\r\n\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},93223:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadScrollable]="true"\r\n       [typeaheadOptionsInScrollableView]="5"\r\n       class="form-control">\r\n'},94815:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-scrollable',\r\n  templateUrl: './scrollable.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadScrollableComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},27819:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<pre class="card card-block card-header mb-3">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadSelectFirstItem]="false"\r\n       class="form-control">\r\n'},11059:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-selected-first-item',\r\n  templateUrl: './selected-first-item.html',\r\n  standalone: false\r\n})\r\nexport class DemotypeaheadSelectFirstItemComponent {\r\n  selected?: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},92679:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<button type="button" class="btn btn-primary mb-3"\r\n        (click)="typeaheadHideResultsOnBlur = !typeaheadHideResultsOnBlur">Toggle typeaheadHideResultsOnBlur\r\n</button>\r\n<pre class="card card-block card-header mb-3">\r\n  typeaheadHideResultsOnBlur: {{typeaheadHideResultsOnBlur}}\r\n  Model: {{selected | json}}\r\n</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadHideResultsOnBlur]="typeaheadHideResultsOnBlur"\r\n       class="form-control">\r\n'},42559:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-show-on-blur',\r\n  templateUrl: './show-on-blur.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadShowOnBlurComponent {\r\n  typeaheadHideResultsOnBlur = false;\r\n  selected?: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},53735:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l='<button type="button" class="btn btn-primary"\r\n        (click)="typeaheadSingleWords = !typeaheadSingleWords">Toggle typeaheadSingleWords\r\n</button>\r\n<pre class="card card-block card-header">\r\n  typeaheadSingleWords: {{typeaheadSingleWords}}\r\n  Model: {{selected | json}}\r\n</pre>\r\n<input [(ngModel)]="selected"\r\n       [typeahead]="states"\r\n       [typeaheadSingleWords]="typeaheadSingleWords"\r\n       class="form-control">\r\n'},57023:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'demo-typeahead-single-world',\r\n  templateUrl: './single-world.html',\r\n  standalone: false\r\n})\r\nexport class DemoTypeaheadSingleWorldComponent {\r\n  typeaheadSingleWords = true;\r\n  selected?: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n"},41704:(p,i,r)=>{r.r(i),r.d(i,{default:()=>l});const l="### Standalone component usage\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\n@Component({\r\n  standalone: true,\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    TypeaheadModule,\r\n    ...\r\n  ]\r\n})\r\nexport class AppComponent(){}\r\n\r\n### Module usage\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    TypeaheadModule,\r\n    ...\r\n  ]\r\n})\r\nexport class AppModule(){}\r\n"}}]);